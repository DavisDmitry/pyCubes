{"config":{"indexing":"full","lang":["en","ru"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"pyCubes pyCubes is a library for creating servers and clients Minecraft Java Edition. \u2757 0.x versions are not stable. The library API is subject to change. Installation: pip install pyCubes Usage First you need to create application instance: import cubes app = cubes . Application () After that add a low-level handler: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ): print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) All that remains is to launch the application: app . run ( '127.0.0.1' , 25565 ) A more detailed example can be found here . All packages are described here .","title":"pyCubes"},{"location":"#pycubes","text":"pyCubes is a library for creating servers and clients Minecraft Java Edition. \u2757 0.x versions are not stable. The library API is subject to change. Installation: pip install pyCubes","title":"pyCubes"},{"location":"#usage","text":"First you need to create application instance: import cubes app = cubes . Application () After that add a low-level handler: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ): print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) All that remains is to launch the application: app . run ( '127.0.0.1' , 25565 ) A more detailed example can be found here . All packages are described here .","title":"Usage"},{"location":"dev/","text":"Development Scripts Run formatting: make format Run linters: make lint Run tests: make test Working with documentation First you need to install requirments: poetry install --no-root -E docs Generate API Reference: poetry run scripts/generate_reference.py Move current API Reference to Legacy: python scripts/move_reference_to_legacy.py Run the development server: poetry run mkdocs serve Build (render) the docs: poetry run mkdocs build Build and deploy the documentation to github pages: poetry run mkdocs gh-build","title":"Development"},{"location":"dev/#development","text":"","title":"Development"},{"location":"dev/#scripts","text":"Run formatting: make format Run linters: make lint Run tests: make test","title":"Scripts"},{"location":"dev/#working-with-documentation","text":"First you need to install requirments: poetry install --no-root -E docs Generate API Reference: poetry run scripts/generate_reference.py Move current API Reference to Legacy: python scripts/move_reference_to_legacy.py Run the development server: poetry run mkdocs serve Build (render) the docs: poetry run mkdocs build Build and deploy the documentation to github pages: poetry run mkdocs gh-build","title":"Working with documentation"},{"location":"legacy/0_1/app/","text":"module app class GracefulExit Exception raising when server should stop. class Application Class for creating Minecraft Java Edition server implemetation. Examples: app = Application('0.0.0.0', 25565) method __init__ __init__ ( host : str , port : int ) property unhandled_packet_handler method add_low_level_handler add_low_level_handler ( conn_status : ConnectionStatus , packet_id : int , func : Callable ) \u2192 None Adds packet handler. Raises: ValueError : when handler with the same filter (conn_status and packet_id) already added Examples: server.add_low_level_handler(ConnectionStatus.HANDSHAKE, 0x00, process_handshake) method run run () \u2192 None Starts application.","title":"app"},{"location":"legacy/0_1/app/#module-app","text":"","title":"module app"},{"location":"legacy/0_1/app/#class-gracefulexit","text":"Exception raising when server should stop.","title":"class GracefulExit"},{"location":"legacy/0_1/app/#class-application","text":"Class for creating Minecraft Java Edition server implemetation. Examples: app = Application('0.0.0.0', 25565)","title":"class Application"},{"location":"legacy/0_1/app/#method-__init__","text":"__init__ ( host : str , port : int )","title":"method __init__"},{"location":"legacy/0_1/app/#property-unhandled_packet_handler","text":"","title":"property unhandled_packet_handler"},{"location":"legacy/0_1/app/#method-add_low_level_handler","text":"add_low_level_handler ( conn_status : ConnectionStatus , packet_id : int , func : Callable ) \u2192 None Adds packet handler. Raises: ValueError : when handler with the same filter (conn_status and packet_id) already added Examples: server.add_low_level_handler(ConnectionStatus.HANDSHAKE, 0x00, process_handshake)","title":"method add_low_level_handler"},{"location":"legacy/0_1/app/#method-run","text":"run () \u2192 None Starts application.","title":"method run"},{"location":"legacy/0_1/buffer/","text":"module buffer class EmptyBufferError Exception raising when buffer is empty. class ReadBuffer Class for parsing data by types. method __init__ __init__ ( data : bytes = b '' ) property boolean Either False or True. property byte Signed 8-bit integer. property data Buffer data. property double Signed 64-bit float. property float Signed 32-bit float. property integer Signed 32-bit integer. property long Signed 64-bit integer. property short Signed 16-bit integer. property string UTF-8 string. Note: Max string length is 32767 (b'\\xff\\xff\\x01') bytes \u2014 3 bytes VarInt prefix. property unsigned_byte Unsigned 8-bit integer. property unsigned_short Unsigned 16-bit integer. property varint Variable-length integer. property varlong Variable-length integer. classmethod from_reader from_reader ( reader : StreamReader ) \u2192 ReadBuffer Creates a ReadBuffer instance from asyncio.StreamReader. Note: Packet length is 2097151 (b'\\xff\\xff\\x7f') bytes \u2014 3 bytes VarInt prefix. Raises: EmptyBufferError : when buffer is empty Todo: * implement compression method read read ( length : Optional [ int ] = None ) \u2192 bytes Reads length bytes from buffer. Note: If length <= 0 or None returns all buffer data from current position. Args: length : number of bytes to read class WriteBuffer Class for serializing data by types. method __init__ __init__ ( data : bytes = b '' ) property data Buffer data. property packed Packed buffer data. Todo: * implement compression method pack_boolean pack_boolean ( value : bool ) \u2192 WriteBuffer Packs True or False. method pack_byte pack_byte ( value : int ) \u2192 WriteBuffer Packs signed 8-bit integer. method pack_double pack_double ( value : float ) \u2192 WriteBuffer Packs signed 64-bit double. method pack_float pack_float ( value : float ) \u2192 WriteBuffer Packs signed 32-bit float. method pack_integer pack_integer ( value : int ) \u2192 WriteBuffer Packs signed 32-bit integer. method pack_long pack_long ( value : int ) \u2192 WriteBuffer Packs signed 64-bit integer. method pack_short pack_short ( value : int ) \u2192 WriteBuffer Packs signed 16-bit integer. method pack_string pack_string ( value : str ) \u2192 WriteBuffer Packs UTF-8 string. method pack_unsigned_byte pack_unsigned_byte ( value : int ) \u2192 WriteBuffer Packs unsigned 8-bit integer. method pack_unsigned_short pack_unsigned_short ( value : int ) \u2192 WriteBuffer Packs unsigned 16-bit integer. method pack_varint pack_varint ( value : int ) \u2192 WriteBuffer Packs variable-length integer. method pack_varlong pack_varlong ( value : int ) \u2192 WriteBuffer Packs variable-length integer. method write write ( data : bytes ) \u2192 WriteBuffer Appends data to buffer.","title":"buffer"},{"location":"legacy/0_1/buffer/#module-buffer","text":"","title":"module buffer"},{"location":"legacy/0_1/buffer/#class-emptybuffererror","text":"Exception raising when buffer is empty.","title":"class EmptyBufferError"},{"location":"legacy/0_1/buffer/#class-readbuffer","text":"Class for parsing data by types.","title":"class ReadBuffer"},{"location":"legacy/0_1/buffer/#method-__init__","text":"__init__ ( data : bytes = b '' )","title":"method __init__"},{"location":"legacy/0_1/buffer/#property-boolean","text":"Either False or True.","title":"property boolean"},{"location":"legacy/0_1/buffer/#property-byte","text":"Signed 8-bit integer.","title":"property byte"},{"location":"legacy/0_1/buffer/#property-data","text":"Buffer data.","title":"property data"},{"location":"legacy/0_1/buffer/#property-double","text":"Signed 64-bit float.","title":"property double"},{"location":"legacy/0_1/buffer/#property-float","text":"Signed 32-bit float.","title":"property float"},{"location":"legacy/0_1/buffer/#property-integer","text":"Signed 32-bit integer.","title":"property integer"},{"location":"legacy/0_1/buffer/#property-long","text":"Signed 64-bit integer.","title":"property long"},{"location":"legacy/0_1/buffer/#property-short","text":"Signed 16-bit integer.","title":"property short"},{"location":"legacy/0_1/buffer/#property-string","text":"UTF-8 string. Note: Max string length is 32767 (b'\\xff\\xff\\x01') bytes \u2014 3 bytes VarInt prefix.","title":"property string"},{"location":"legacy/0_1/buffer/#property-unsigned_byte","text":"Unsigned 8-bit integer.","title":"property unsigned_byte"},{"location":"legacy/0_1/buffer/#property-unsigned_short","text":"Unsigned 16-bit integer.","title":"property unsigned_short"},{"location":"legacy/0_1/buffer/#property-varint","text":"Variable-length integer.","title":"property varint"},{"location":"legacy/0_1/buffer/#property-varlong","text":"Variable-length integer.","title":"property varlong"},{"location":"legacy/0_1/buffer/#classmethod-from_reader","text":"from_reader ( reader : StreamReader ) \u2192 ReadBuffer Creates a ReadBuffer instance from asyncio.StreamReader. Note: Packet length is 2097151 (b'\\xff\\xff\\x7f') bytes \u2014 3 bytes VarInt prefix. Raises: EmptyBufferError : when buffer is empty Todo: * implement compression","title":"classmethod from_reader"},{"location":"legacy/0_1/buffer/#method-read","text":"read ( length : Optional [ int ] = None ) \u2192 bytes Reads length bytes from buffer. Note: If length <= 0 or None returns all buffer data from current position. Args: length : number of bytes to read","title":"method read"},{"location":"legacy/0_1/buffer/#class-writebuffer","text":"Class for serializing data by types.","title":"class WriteBuffer"},{"location":"legacy/0_1/buffer/#method-__init___1","text":"__init__ ( data : bytes = b '' )","title":"method __init__"},{"location":"legacy/0_1/buffer/#property-data_1","text":"Buffer data.","title":"property data"},{"location":"legacy/0_1/buffer/#property-packed","text":"Packed buffer data. Todo: * implement compression","title":"property packed"},{"location":"legacy/0_1/buffer/#method-pack_boolean","text":"pack_boolean ( value : bool ) \u2192 WriteBuffer Packs True or False.","title":"method pack_boolean"},{"location":"legacy/0_1/buffer/#method-pack_byte","text":"pack_byte ( value : int ) \u2192 WriteBuffer Packs signed 8-bit integer.","title":"method pack_byte"},{"location":"legacy/0_1/buffer/#method-pack_double","text":"pack_double ( value : float ) \u2192 WriteBuffer Packs signed 64-bit double.","title":"method pack_double"},{"location":"legacy/0_1/buffer/#method-pack_float","text":"pack_float ( value : float ) \u2192 WriteBuffer Packs signed 32-bit float.","title":"method pack_float"},{"location":"legacy/0_1/buffer/#method-pack_integer","text":"pack_integer ( value : int ) \u2192 WriteBuffer Packs signed 32-bit integer.","title":"method pack_integer"},{"location":"legacy/0_1/buffer/#method-pack_long","text":"pack_long ( value : int ) \u2192 WriteBuffer Packs signed 64-bit integer.","title":"method pack_long"},{"location":"legacy/0_1/buffer/#method-pack_short","text":"pack_short ( value : int ) \u2192 WriteBuffer Packs signed 16-bit integer.","title":"method pack_short"},{"location":"legacy/0_1/buffer/#method-pack_string","text":"pack_string ( value : str ) \u2192 WriteBuffer Packs UTF-8 string.","title":"method pack_string"},{"location":"legacy/0_1/buffer/#method-pack_unsigned_byte","text":"pack_unsigned_byte ( value : int ) \u2192 WriteBuffer Packs unsigned 8-bit integer.","title":"method pack_unsigned_byte"},{"location":"legacy/0_1/buffer/#method-pack_unsigned_short","text":"pack_unsigned_short ( value : int ) \u2192 WriteBuffer Packs unsigned 16-bit integer.","title":"method pack_unsigned_short"},{"location":"legacy/0_1/buffer/#method-pack_varint","text":"pack_varint ( value : int ) \u2192 WriteBuffer Packs variable-length integer.","title":"method pack_varint"},{"location":"legacy/0_1/buffer/#method-pack_varlong","text":"pack_varlong ( value : int ) \u2192 WriteBuffer Packs variable-length integer.","title":"method pack_varlong"},{"location":"legacy/0_1/buffer/#method-write","text":"write ( data : bytes ) \u2192 WriteBuffer Appends data to buffer.","title":"method write"},{"location":"legacy/0_1/connection/","text":"module connection class CloseConnection Raising when connection should be closed. class ConnectionStatus An enumeration. class Connection Client or server connection. method __init__ __init__ ( reader : StreamReader , writer : StreamWriter ) method close close () \u2192 None Closes connection. classmethod get_current get_current () \u2192 Optional [ ForwardRef ( 'Connection' )] Returns current Connection instance. method read_packet read_packet () \u2192 Optional [ ReadBuffer ] Reads packet. method send_packet send_packet ( _buffer : WriteBuffer ) \u2192 None Sends packet. method set_current set_current () \u2192 None Sets instance as a current.","title":"connection"},{"location":"legacy/0_1/connection/#module-connection","text":"","title":"module connection"},{"location":"legacy/0_1/connection/#class-closeconnection","text":"Raising when connection should be closed.","title":"class CloseConnection"},{"location":"legacy/0_1/connection/#class-connectionstatus","text":"An enumeration.","title":"class ConnectionStatus"},{"location":"legacy/0_1/connection/#class-connection","text":"Client or server connection.","title":"class Connection"},{"location":"legacy/0_1/connection/#method-__init__","text":"__init__ ( reader : StreamReader , writer : StreamWriter )","title":"method __init__"},{"location":"legacy/0_1/connection/#method-close","text":"close () \u2192 None Closes connection.","title":"method close"},{"location":"legacy/0_1/connection/#classmethod-get_current","text":"get_current () \u2192 Optional [ ForwardRef ( 'Connection' )] Returns current Connection instance.","title":"classmethod get_current"},{"location":"legacy/0_1/connection/#method-read_packet","text":"read_packet () \u2192 Optional [ ReadBuffer ] Reads packet.","title":"method read_packet"},{"location":"legacy/0_1/connection/#method-send_packet","text":"send_packet ( _buffer : WriteBuffer ) \u2192 None Sends packet.","title":"method send_packet"},{"location":"legacy/0_1/connection/#method-set_current","text":"set_current () \u2192 None Sets instance as a current.","title":"method set_current"},{"location":"legacy/0_1/utils/","text":"module utils function generate_uuid generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"utils"},{"location":"legacy/0_1/utils/#module-utils","text":"","title":"module utils"},{"location":"legacy/0_1/utils/#function-generate_uuid","text":"generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"function generate_uuid"},{"location":"migrations/0_2/","text":"0.1 -> 0.2 Application Host and port to run are now passed in the Application.run method 0.1 0.2 import cubes app = cubes . Application ( '127.0.0.1' , 25565 ) app . run () import cubes app = cubes . Application () app . run ( '127.0.0.1' , 25565 ) Now packet_id is passed to the packet handlers as the first arguments 0.1 0.2 import cubes async def handler ( packet : cubes . ReadBuffer ): pass import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ): pass The value returned by the handler is now ignored. You must send all packets yourself 0.1 0.2 import cubes async def handler ( packet : cubes . ReadBuffer ) -> Optional [ cubes . WriteBuffer ]: \"\"\"Process Status Ping.\"\"\" return cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet . read ( 8 )) import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ) -> None : \"\"\"Process Status Ping.\"\"\" await packet . connection . send ( cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet_read ( 8 ) ) ReadBuffer Now the connection argument is required for initialization 0.1 0.2 import cubes ... buff = cubes . ReadBuffer () import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection buff = cubes . ReadBuffer ( conn ) The same argument appeared for the from_reader method 0.1 0.2 import asyncio import cubes ... reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( reader ) import asyncio import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( conn , reader ) Connection The \u0421onnection class has been replaced with PlayerConnection . When initializing it, you must pass an Application instance 0.1 0.2 import asyncio import cubes ... reader : asyncio . StreamReader writer : asyncio . StreamWriter conn = cubes . Connection ( reader , writer ) import asyncio import cubes import cubes.abc ... reader : asyncio . StreamReader writer : asyncio . StreamWriter app : cubes . abc . Application conn = cubes . Connection ( reader , writer , app ) An optional argument reason has been added to the close method and the \u0421loseConnection exception PlayerConnection CloseConnection import cubes ... conn : cubes . PlayerConnection reason : str await conn . close ( reason ) import cubes ... reason : str raise cubes . CloseConnection ( reason ) Removed set_current and get_current methods. Instead of get_current , use the instance from the connection property of ReadBuffer 0.1 0.2 import cubes ... async def handler ( packet : cubes . ReadBuffer ): conn = cubes . Connection . get_current () import cubes ... async def handler ( packet_id : int , packet : cubes . ReadBuffer ): conn = packet . connection","title":"0.1 -> 0.2"},{"location":"migrations/0_2/#01-02","text":"","title":"0.1 -&gt; 0.2"},{"location":"migrations/0_2/#application","text":"Host and port to run are now passed in the Application.run method 0.1 0.2 import cubes app = cubes . Application ( '127.0.0.1' , 25565 ) app . run () import cubes app = cubes . Application () app . run ( '127.0.0.1' , 25565 ) Now packet_id is passed to the packet handlers as the first arguments 0.1 0.2 import cubes async def handler ( packet : cubes . ReadBuffer ): pass import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ): pass The value returned by the handler is now ignored. You must send all packets yourself 0.1 0.2 import cubes async def handler ( packet : cubes . ReadBuffer ) -> Optional [ cubes . WriteBuffer ]: \"\"\"Process Status Ping.\"\"\" return cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet . read ( 8 )) import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ) -> None : \"\"\"Process Status Ping.\"\"\" await packet . connection . send ( cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet_read ( 8 ) )","title":"Application"},{"location":"migrations/0_2/#readbuffer","text":"Now the connection argument is required for initialization 0.1 0.2 import cubes ... buff = cubes . ReadBuffer () import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection buff = cubes . ReadBuffer ( conn ) The same argument appeared for the from_reader method 0.1 0.2 import asyncio import cubes ... reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( reader ) import asyncio import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( conn , reader )","title":"ReadBuffer"},{"location":"migrations/0_2/#connection","text":"The \u0421onnection class has been replaced with PlayerConnection . When initializing it, you must pass an Application instance 0.1 0.2 import asyncio import cubes ... reader : asyncio . StreamReader writer : asyncio . StreamWriter conn = cubes . Connection ( reader , writer ) import asyncio import cubes import cubes.abc ... reader : asyncio . StreamReader writer : asyncio . StreamWriter app : cubes . abc . Application conn = cubes . Connection ( reader , writer , app ) An optional argument reason has been added to the close method and the \u0421loseConnection exception PlayerConnection CloseConnection import cubes ... conn : cubes . PlayerConnection reason : str await conn . close ( reason ) import cubes ... reason : str raise cubes . CloseConnection ( reason ) Removed set_current and get_current methods. Instead of get_current , use the instance from the connection property of ReadBuffer 0.1 0.2 import cubes ... async def handler ( packet : cubes . ReadBuffer ): conn = cubes . Connection . get_current () import cubes ... async def handler ( packet_id : int , packet : cubes . ReadBuffer ): conn = packet . connection","title":"Connection"},{"location":"reference/types_/","text":"module types_ class ConnectionStatus Connection Status enumeration. HANDSHAKE, STATUS, LOGIN, PlAY class PlayerData Class for storing the most important player data. method __init__ __init__ ( uuid : UUID , name : str ) property name str: Player name. property uuid uuid.UUID: Player UUID.","title":"types_"},{"location":"reference/types_/#module-types_","text":"","title":"module types_"},{"location":"reference/types_/#class-connectionstatus","text":"Connection Status enumeration. HANDSHAKE, STATUS, LOGIN, PlAY","title":"class ConnectionStatus"},{"location":"reference/types_/#class-playerdata","text":"Class for storing the most important player data.","title":"class PlayerData"},{"location":"reference/types_/#method-__init__","text":"__init__ ( uuid : UUID , name : str )","title":"method __init__"},{"location":"reference/types_/#property-name","text":"str: Player name.","title":"property name"},{"location":"reference/types_/#property-uuid","text":"uuid.UUID: Player UUID.","title":"property uuid"},{"location":"reference/utils/","text":"module utils function generate_uuid generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"utils"},{"location":"reference/utils/#module-utils","text":"","title":"module utils"},{"location":"reference/utils/#function-generate_uuid","text":"generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"function generate_uuid"},{"location":"ru/","text":"pyCubes pyCubes \u2014 \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 Minecraft Java Edition. \u2757 0.x \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b, API \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: pip install pyCubes \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: import cubes app = cubes . Application () \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043d\u0438\u0437\u043a\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u044b\u0439 \u0445\u0435\u043d\u0434\u043b\u0435\u0440: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ) -> None : print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) \u041e\u0441\u0442\u0430\u0451\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435: app . run ( '127.0.0.1' , 25565 ) \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c . \u0412\u0441\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0437\u0434\u0435\u0441\u044c .","title":"pyCubes"},{"location":"ru/#pycubes","text":"pyCubes \u2014 \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 Minecraft Java Edition. \u2757 0.x \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b, API \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: pip install pyCubes","title":"pyCubes"},{"location":"ru/#_1","text":"\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: import cubes app = cubes . Application () \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043d\u0438\u0437\u043a\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u044b\u0439 \u0445\u0435\u043d\u0434\u043b\u0435\u0440: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ) -> None : print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) \u041e\u0441\u0442\u0430\u0451\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435: app . run ( '127.0.0.1' , 25565 ) \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c . \u0412\u0441\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0437\u0434\u0435\u0441\u044c .","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"ru/dev/","text":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 C\u043a\u0440\u0438\u043f\u0442\u044b \u0417\u0430\u043f\u0443\u0441\u043a \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f make format \u0417\u0430\u043f\u0443\u0441\u043a \u043b\u0438\u043d\u0442\u0435\u0440\u043e\u0432 make lint \u0417\u0430\u043f\u0443\u0441\u043a \u0442\u0435\u0441\u0442\u043e\u0432 make test \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0438 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f VERSION . \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: export VERSION = 0 .2.0 \u0417\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u043a\u0440\u0438\u043f\u0442: python scripts/edit_version.py \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439 C\u043d\u0430\u0447\u0430\u043b\u0430 \u043d\u0443\u0436\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0443\u0442\u0438\u043b\u0438\u0442\u044b: poetry install --no-root -E docs \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f API Reference \u0414\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f VERSION . \u0415\u0451 \u043d\u0443\u0436\u043d\u043e \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: export VERSION = 0 .2.0 \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f: poetry run scripts/generate_reference.py \u041f\u0435\u0440\u0435\u043d\u043e\u0441 API Reference \u0432 \u0440\u0430\u0437\u0434\u0435\u043b Legacy python scripts/move_reference_to_legacy.py \u0417\u0430\u043f\u0443\u0441\u043a dev-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 poetry run mkdocs serve \u0421\u0431\u043e\u0440\u043a\u0430 (\u0440\u0435\u043d\u0434\u0435\u0440) \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 poetry run mkdocs build \u0421\u0431\u043e\u0440\u043a\u0430 \u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0430 github pages poetry run mkdocs gh-build","title":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430"},{"location":"ru/dev/#_1","text":"","title":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430"},{"location":"ru/dev/#c","text":"","title":"C\u043a\u0440\u0438\u043f\u0442\u044b"},{"location":"ru/dev/#_2","text":"make format","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f"},{"location":"ru/dev/#_3","text":"make lint","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043b\u0438\u043d\u0442\u0435\u0440\u043e\u0432"},{"location":"ru/dev/#_4","text":"make test","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u0442\u0435\u0441\u0442\u043e\u0432"},{"location":"ru/dev/#_5","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f VERSION . \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: export VERSION = 0 .2.0 \u0417\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u043a\u0440\u0438\u043f\u0442: python scripts/edit_version.py","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0438"},{"location":"ru/dev/#_6","text":"C\u043d\u0430\u0447\u0430\u043b\u0430 \u043d\u0443\u0436\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0443\u0442\u0438\u043b\u0438\u0442\u044b: poetry install --no-root -E docs","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439"},{"location":"ru/dev/#api-reference","text":"\u0414\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f VERSION . \u0415\u0451 \u043d\u0443\u0436\u043d\u043e \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: export VERSION = 0 .2.0 \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f: poetry run scripts/generate_reference.py","title":"\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f API Reference"},{"location":"ru/dev/#api-reference-legacy","text":"python scripts/move_reference_to_legacy.py","title":"\u041f\u0435\u0440\u0435\u043d\u043e\u0441 API Reference \u0432 \u0440\u0430\u0437\u0434\u0435\u043b Legacy"},{"location":"ru/dev/#dev-","text":"poetry run mkdocs serve","title":"\u0417\u0430\u043f\u0443\u0441\u043a dev-\u0441\u0435\u0440\u0432\u0435\u0440\u0430"},{"location":"ru/dev/#_7","text":"poetry run mkdocs build","title":"\u0421\u0431\u043e\u0440\u043a\u0430 (\u0440\u0435\u043d\u0434\u0435\u0440) \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438"},{"location":"ru/dev/#github-pages","text":"poetry run mkdocs gh-build","title":"\u0421\u0431\u043e\u0440\u043a\u0430 \u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0430 github pages"},{"location":"ru/legacy/0_1/app/","text":"module app class GracefulExit Exception raising when server should stop. class Application Class for creating Minecraft Java Edition server implemetation. Examples: app = Application('0.0.0.0', 25565) method __init__ __init__ ( host : str , port : int ) property unhandled_packet_handler method add_low_level_handler add_low_level_handler ( conn_status : ConnectionStatus , packet_id : int , func : Callable ) \u2192 None Adds packet handler. Raises: ValueError : when handler with the same filter (conn_status and packet_id) already added Examples: server.add_low_level_handler(ConnectionStatus.HANDSHAKE, 0x00, process_handshake) method run run () \u2192 None Starts application.","title":"app"},{"location":"ru/legacy/0_1/app/#module-app","text":"","title":"module app"},{"location":"ru/legacy/0_1/app/#class-gracefulexit","text":"Exception raising when server should stop.","title":"class GracefulExit"},{"location":"ru/legacy/0_1/app/#class-application","text":"Class for creating Minecraft Java Edition server implemetation. Examples: app = Application('0.0.0.0', 25565)","title":"class Application"},{"location":"ru/legacy/0_1/app/#method-__init__","text":"__init__ ( host : str , port : int )","title":"method __init__"},{"location":"ru/legacy/0_1/app/#property-unhandled_packet_handler","text":"","title":"property unhandled_packet_handler"},{"location":"ru/legacy/0_1/app/#method-add_low_level_handler","text":"add_low_level_handler ( conn_status : ConnectionStatus , packet_id : int , func : Callable ) \u2192 None Adds packet handler. Raises: ValueError : when handler with the same filter (conn_status and packet_id) already added Examples: server.add_low_level_handler(ConnectionStatus.HANDSHAKE, 0x00, process_handshake)","title":"method add_low_level_handler"},{"location":"ru/legacy/0_1/app/#method-run","text":"run () \u2192 None Starts application.","title":"method run"},{"location":"ru/legacy/0_1/buffer/","text":"module buffer class EmptyBufferError Exception raising when buffer is empty. class ReadBuffer Class for parsing data by types. method __init__ __init__ ( data : bytes = b '' ) property boolean Either False or True. property byte Signed 8-bit integer. property data Buffer data. property double Signed 64-bit float. property float Signed 32-bit float. property integer Signed 32-bit integer. property long Signed 64-bit integer. property short Signed 16-bit integer. property string UTF-8 string. Note: Max string length is 32767 (b'\\xff\\xff\\x01') bytes \u2014 3 bytes VarInt prefix. property unsigned_byte Unsigned 8-bit integer. property unsigned_short Unsigned 16-bit integer. property varint Variable-length integer. property varlong Variable-length integer. classmethod from_reader from_reader ( reader : StreamReader ) \u2192 ReadBuffer Creates a ReadBuffer instance from asyncio.StreamReader. Note: Packet length is 2097151 (b'\\xff\\xff\\x7f') bytes \u2014 3 bytes VarInt prefix. Raises: EmptyBufferError : when buffer is empty Todo: * implement compression method read read ( length : Optional [ int ] = None ) \u2192 bytes Reads length bytes from buffer. Note: If length <= 0 or None returns all buffer data from current position. Args: length : number of bytes to read class WriteBuffer Class for serializing data by types. method __init__ __init__ ( data : bytes = b '' ) property data Buffer data. property packed Packed buffer data. Todo: * implement compression method pack_boolean pack_boolean ( value : bool ) \u2192 WriteBuffer Packs True or False. method pack_byte pack_byte ( value : int ) \u2192 WriteBuffer Packs signed 8-bit integer. method pack_double pack_double ( value : float ) \u2192 WriteBuffer Packs signed 64-bit double. method pack_float pack_float ( value : float ) \u2192 WriteBuffer Packs signed 32-bit float. method pack_integer pack_integer ( value : int ) \u2192 WriteBuffer Packs signed 32-bit integer. method pack_long pack_long ( value : int ) \u2192 WriteBuffer Packs signed 64-bit integer. method pack_short pack_short ( value : int ) \u2192 WriteBuffer Packs signed 16-bit integer. method pack_string pack_string ( value : str ) \u2192 WriteBuffer Packs UTF-8 string. method pack_unsigned_byte pack_unsigned_byte ( value : int ) \u2192 WriteBuffer Packs unsigned 8-bit integer. method pack_unsigned_short pack_unsigned_short ( value : int ) \u2192 WriteBuffer Packs unsigned 16-bit integer. method pack_varint pack_varint ( value : int ) \u2192 WriteBuffer Packs variable-length integer. method pack_varlong pack_varlong ( value : int ) \u2192 WriteBuffer Packs variable-length integer. method write write ( data : bytes ) \u2192 WriteBuffer Appends data to buffer.","title":"buffer"},{"location":"ru/legacy/0_1/buffer/#module-buffer","text":"","title":"module buffer"},{"location":"ru/legacy/0_1/buffer/#class-emptybuffererror","text":"Exception raising when buffer is empty.","title":"class EmptyBufferError"},{"location":"ru/legacy/0_1/buffer/#class-readbuffer","text":"Class for parsing data by types.","title":"class ReadBuffer"},{"location":"ru/legacy/0_1/buffer/#method-__init__","text":"__init__ ( data : bytes = b '' )","title":"method __init__"},{"location":"ru/legacy/0_1/buffer/#property-boolean","text":"Either False or True.","title":"property boolean"},{"location":"ru/legacy/0_1/buffer/#property-byte","text":"Signed 8-bit integer.","title":"property byte"},{"location":"ru/legacy/0_1/buffer/#property-data","text":"Buffer data.","title":"property data"},{"location":"ru/legacy/0_1/buffer/#property-double","text":"Signed 64-bit float.","title":"property double"},{"location":"ru/legacy/0_1/buffer/#property-float","text":"Signed 32-bit float.","title":"property float"},{"location":"ru/legacy/0_1/buffer/#property-integer","text":"Signed 32-bit integer.","title":"property integer"},{"location":"ru/legacy/0_1/buffer/#property-long","text":"Signed 64-bit integer.","title":"property long"},{"location":"ru/legacy/0_1/buffer/#property-short","text":"Signed 16-bit integer.","title":"property short"},{"location":"ru/legacy/0_1/buffer/#property-string","text":"UTF-8 string. Note: Max string length is 32767 (b'\\xff\\xff\\x01') bytes \u2014 3 bytes VarInt prefix.","title":"property string"},{"location":"ru/legacy/0_1/buffer/#property-unsigned_byte","text":"Unsigned 8-bit integer.","title":"property unsigned_byte"},{"location":"ru/legacy/0_1/buffer/#property-unsigned_short","text":"Unsigned 16-bit integer.","title":"property unsigned_short"},{"location":"ru/legacy/0_1/buffer/#property-varint","text":"Variable-length integer.","title":"property varint"},{"location":"ru/legacy/0_1/buffer/#property-varlong","text":"Variable-length integer.","title":"property varlong"},{"location":"ru/legacy/0_1/buffer/#classmethod-from_reader","text":"from_reader ( reader : StreamReader ) \u2192 ReadBuffer Creates a ReadBuffer instance from asyncio.StreamReader. Note: Packet length is 2097151 (b'\\xff\\xff\\x7f') bytes \u2014 3 bytes VarInt prefix. Raises: EmptyBufferError : when buffer is empty Todo: * implement compression","title":"classmethod from_reader"},{"location":"ru/legacy/0_1/buffer/#method-read","text":"read ( length : Optional [ int ] = None ) \u2192 bytes Reads length bytes from buffer. Note: If length <= 0 or None returns all buffer data from current position. Args: length : number of bytes to read","title":"method read"},{"location":"ru/legacy/0_1/buffer/#class-writebuffer","text":"Class for serializing data by types.","title":"class WriteBuffer"},{"location":"ru/legacy/0_1/buffer/#method-__init___1","text":"__init__ ( data : bytes = b '' )","title":"method __init__"},{"location":"ru/legacy/0_1/buffer/#property-data_1","text":"Buffer data.","title":"property data"},{"location":"ru/legacy/0_1/buffer/#property-packed","text":"Packed buffer data. Todo: * implement compression","title":"property packed"},{"location":"ru/legacy/0_1/buffer/#method-pack_boolean","text":"pack_boolean ( value : bool ) \u2192 WriteBuffer Packs True or False.","title":"method pack_boolean"},{"location":"ru/legacy/0_1/buffer/#method-pack_byte","text":"pack_byte ( value : int ) \u2192 WriteBuffer Packs signed 8-bit integer.","title":"method pack_byte"},{"location":"ru/legacy/0_1/buffer/#method-pack_double","text":"pack_double ( value : float ) \u2192 WriteBuffer Packs signed 64-bit double.","title":"method pack_double"},{"location":"ru/legacy/0_1/buffer/#method-pack_float","text":"pack_float ( value : float ) \u2192 WriteBuffer Packs signed 32-bit float.","title":"method pack_float"},{"location":"ru/legacy/0_1/buffer/#method-pack_integer","text":"pack_integer ( value : int ) \u2192 WriteBuffer Packs signed 32-bit integer.","title":"method pack_integer"},{"location":"ru/legacy/0_1/buffer/#method-pack_long","text":"pack_long ( value : int ) \u2192 WriteBuffer Packs signed 64-bit integer.","title":"method pack_long"},{"location":"ru/legacy/0_1/buffer/#method-pack_short","text":"pack_short ( value : int ) \u2192 WriteBuffer Packs signed 16-bit integer.","title":"method pack_short"},{"location":"ru/legacy/0_1/buffer/#method-pack_string","text":"pack_string ( value : str ) \u2192 WriteBuffer Packs UTF-8 string.","title":"method pack_string"},{"location":"ru/legacy/0_1/buffer/#method-pack_unsigned_byte","text":"pack_unsigned_byte ( value : int ) \u2192 WriteBuffer Packs unsigned 8-bit integer.","title":"method pack_unsigned_byte"},{"location":"ru/legacy/0_1/buffer/#method-pack_unsigned_short","text":"pack_unsigned_short ( value : int ) \u2192 WriteBuffer Packs unsigned 16-bit integer.","title":"method pack_unsigned_short"},{"location":"ru/legacy/0_1/buffer/#method-pack_varint","text":"pack_varint ( value : int ) \u2192 WriteBuffer Packs variable-length integer.","title":"method pack_varint"},{"location":"ru/legacy/0_1/buffer/#method-pack_varlong","text":"pack_varlong ( value : int ) \u2192 WriteBuffer Packs variable-length integer.","title":"method pack_varlong"},{"location":"ru/legacy/0_1/buffer/#method-write","text":"write ( data : bytes ) \u2192 WriteBuffer Appends data to buffer.","title":"method write"},{"location":"ru/legacy/0_1/connection/","text":"module connection class CloseConnection Raising when connection should be closed. class ConnectionStatus An enumeration. class Connection Client or server connection. method __init__ __init__ ( reader : StreamReader , writer : StreamWriter ) method close close () \u2192 None Closes connection. classmethod get_current get_current () \u2192 Optional [ ForwardRef ( 'Connection' )] Returns current Connection instance. method read_packet read_packet () \u2192 Optional [ ReadBuffer ] Reads packet. method send_packet send_packet ( _buffer : WriteBuffer ) \u2192 None Sends packet. method set_current set_current () \u2192 None Sets instance as a current.","title":"connection"},{"location":"ru/legacy/0_1/connection/#module-connection","text":"","title":"module connection"},{"location":"ru/legacy/0_1/connection/#class-closeconnection","text":"Raising when connection should be closed.","title":"class CloseConnection"},{"location":"ru/legacy/0_1/connection/#class-connectionstatus","text":"An enumeration.","title":"class ConnectionStatus"},{"location":"ru/legacy/0_1/connection/#class-connection","text":"Client or server connection.","title":"class Connection"},{"location":"ru/legacy/0_1/connection/#method-__init__","text":"__init__ ( reader : StreamReader , writer : StreamWriter )","title":"method __init__"},{"location":"ru/legacy/0_1/connection/#method-close","text":"close () \u2192 None Closes connection.","title":"method close"},{"location":"ru/legacy/0_1/connection/#classmethod-get_current","text":"get_current () \u2192 Optional [ ForwardRef ( 'Connection' )] Returns current Connection instance.","title":"classmethod get_current"},{"location":"ru/legacy/0_1/connection/#method-read_packet","text":"read_packet () \u2192 Optional [ ReadBuffer ] Reads packet.","title":"method read_packet"},{"location":"ru/legacy/0_1/connection/#method-send_packet","text":"send_packet ( _buffer : WriteBuffer ) \u2192 None Sends packet.","title":"method send_packet"},{"location":"ru/legacy/0_1/connection/#method-set_current","text":"set_current () \u2192 None Sets instance as a current.","title":"method set_current"},{"location":"ru/legacy/0_1/utils/","text":"module utils function generate_uuid generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"utils"},{"location":"ru/legacy/0_1/utils/#module-utils","text":"","title":"module utils"},{"location":"ru/legacy/0_1/utils/#function-generate_uuid","text":"generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"function generate_uuid"},{"location":"ru/migrations/0_2/","text":"0.1 -> 0.2 Application \u0425\u043e\u0441\u0442 \u0438 \u043f\u043e\u0440\u0442 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 Application.run \u0411\u044b\u043b\u043e C\u0442\u0430\u043b\u043e import cubes app = cubes . Application ( '127.0.0.1' , 25565 ) app . run () import cubes app = cubes . Application () app . run ( '127.0.0.1' , 25565 ) \u0412 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b \u043f\u0430\u043a\u0435\u0442\u043e\u0432 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0432\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442\u0441\u044f packet_id \u0411\u044b\u043b\u043e C\u0442\u0430\u043b\u043e import cubes async def handler ( packet : cubes . ReadBuffer ): pass import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ): pass \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u043e\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043f\u0435\u0440\u044c \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes async def handler ( packet : cubes . ReadBuffer ) -> Optional [ cubes . WriteBuffer ]: \"\"\"Process Status Ping.\"\"\" return cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet . read ( 8 )) import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ) -> None : \"\"\"Process Status Ping.\"\"\" await packet . connection . send ( cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet_read ( 8 ) ) ReadBuffer \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u043b\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 connection \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes ... buff = cubes . ReadBuffer () import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection buff = cubes . ReadBuffer ( conn ) \u0422\u0430\u043a\u043e\u0439 \u0436\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u043e\u044f\u0432\u0438\u043b\u0441\u044f \u0438 \u0443 \u043c\u0435\u0442\u043e\u0434\u0430 from_reader \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import asyncio import cubes ... reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( reader ) import asyncio import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( conn , reader ) Connection \u041a\u043b\u0430\u0441\u0441 \u0421onnection \u0437\u0430\u043c\u0435\u043d\u0451\u043d \u043d\u0430 PlayerConnection . \u041f\u0440\u0438 \u0435\u0433\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0438\u043d\u0441\u0442\u0430\u043d\u0441 Application \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import asyncio import cubes ... reader : asyncio . StreamReader writer : asyncio . StreamWriter conn = cubes . Connection ( reader , writer ) import asyncio import cubes import cubes.abc ... reader : asyncio . StreamReader writer : asyncio . StreamWriter app : cubes . abc . Application conn = cubes . Connection ( reader , writer , app ) \u0412 \u043c\u0435\u0442\u043e\u0434 close \u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0421loseConnection \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 reason PlayerConnection CloseConnection import cubes ... conn : cubes . PlayerConnection reason : str await conn . close ( reason ) import cubes ... reason : str raise cubes . CloseConnection ( reason ) \u0423\u0434\u0430\u043b\u0435\u043d\u044b \u043c\u0435\u0442\u043e\u0434\u044b set_current \u0438 get_current . \u0412\u043c\u0435\u0441\u0442\u043e get_current \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0430\u043d\u0441 \u0438\u0437 property connection \u0443 ReadBuffer \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes ... async def handler ( packet : cubes . ReadBuffer ): conn = cubes . Connection . get_current () import cubes ... async def handler ( packet_id : int , packet : cubes . ReadBuffer ): conn = packet . connection","title":"0.1 -> 0.2"},{"location":"ru/migrations/0_2/#01-02","text":"","title":"0.1 -&gt; 0.2"},{"location":"ru/migrations/0_2/#application","text":"\u0425\u043e\u0441\u0442 \u0438 \u043f\u043e\u0440\u0442 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 Application.run \u0411\u044b\u043b\u043e C\u0442\u0430\u043b\u043e import cubes app = cubes . Application ( '127.0.0.1' , 25565 ) app . run () import cubes app = cubes . Application () app . run ( '127.0.0.1' , 25565 ) \u0412 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b \u043f\u0430\u043a\u0435\u0442\u043e\u0432 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0432\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442\u0441\u044f packet_id \u0411\u044b\u043b\u043e C\u0442\u0430\u043b\u043e import cubes async def handler ( packet : cubes . ReadBuffer ): pass import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ): pass \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u043e\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043f\u0435\u0440\u044c \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes async def handler ( packet : cubes . ReadBuffer ) -> Optional [ cubes . WriteBuffer ]: \"\"\"Process Status Ping.\"\"\" return cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet . read ( 8 )) import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ) -> None : \"\"\"Process Status Ping.\"\"\" await packet . connection . send ( cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet_read ( 8 ) )","title":"Application"},{"location":"ru/migrations/0_2/#readbuffer","text":"\u0422\u0435\u043f\u0435\u0440\u044c \u0434\u043b\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 connection \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes ... buff = cubes . ReadBuffer () import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection buff = cubes . ReadBuffer ( conn ) \u0422\u0430\u043a\u043e\u0439 \u0436\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u043e\u044f\u0432\u0438\u043b\u0441\u044f \u0438 \u0443 \u043c\u0435\u0442\u043e\u0434\u0430 from_reader \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import asyncio import cubes ... reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( reader ) import asyncio import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( conn , reader )","title":"ReadBuffer"},{"location":"ru/migrations/0_2/#connection","text":"\u041a\u043b\u0430\u0441\u0441 \u0421onnection \u0437\u0430\u043c\u0435\u043d\u0451\u043d \u043d\u0430 PlayerConnection . \u041f\u0440\u0438 \u0435\u0433\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0438\u043d\u0441\u0442\u0430\u043d\u0441 Application \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import asyncio import cubes ... reader : asyncio . StreamReader writer : asyncio . StreamWriter conn = cubes . Connection ( reader , writer ) import asyncio import cubes import cubes.abc ... reader : asyncio . StreamReader writer : asyncio . StreamWriter app : cubes . abc . Application conn = cubes . Connection ( reader , writer , app ) \u0412 \u043c\u0435\u0442\u043e\u0434 close \u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0421loseConnection \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 reason PlayerConnection CloseConnection import cubes ... conn : cubes . PlayerConnection reason : str await conn . close ( reason ) import cubes ... reason : str raise cubes . CloseConnection ( reason ) \u0423\u0434\u0430\u043b\u0435\u043d\u044b \u043c\u0435\u0442\u043e\u0434\u044b set_current \u0438 get_current . \u0412\u043c\u0435\u0441\u0442\u043e get_current \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0430\u043d\u0441 \u0438\u0437 property connection \u0443 ReadBuffer \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes ... async def handler ( packet : cubes . ReadBuffer ): conn = cubes . Connection . get_current () import cubes ... async def handler ( packet_id : int , packet : cubes . ReadBuffer ): conn = packet . connection","title":"Connection"},{"location":"ru/reference/types_/","text":"module types_ class ConnectionStatus Connection Status enumeration. HANDSHAKE, STATUS, LOGIN, PlAY class PlayerData Class for storing the most important player data. method __init__ __init__ ( uuid : UUID , name : str ) property name str: Player name. property uuid uuid.UUID: Player UUID.","title":"types_"},{"location":"ru/reference/types_/#module-types_","text":"","title":"module types_"},{"location":"ru/reference/types_/#class-connectionstatus","text":"Connection Status enumeration. HANDSHAKE, STATUS, LOGIN, PlAY","title":"class ConnectionStatus"},{"location":"ru/reference/types_/#class-playerdata","text":"Class for storing the most important player data.","title":"class PlayerData"},{"location":"ru/reference/types_/#method-__init__","text":"__init__ ( uuid : UUID , name : str )","title":"method __init__"},{"location":"ru/reference/types_/#property-name","text":"str: Player name.","title":"property name"},{"location":"ru/reference/types_/#property-uuid","text":"uuid.UUID: Player UUID.","title":"property uuid"},{"location":"ru/reference/utils/","text":"module utils function generate_uuid generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"utils"},{"location":"ru/reference/utils/#module-utils","text":"","title":"module utils"},{"location":"ru/reference/utils/#function-generate_uuid","text":"generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"function generate_uuid"}]}