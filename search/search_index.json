{"config":{"indexing":"full","lang":["en","ru"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"pyCubes pyCubes is a library for serializing and deserializing Minecraft Java Edition packets. \u2757 0.x versions are not stable. The library API is subject to change. \u0420\u0443\u0441\u0441\u043a\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f Installation: pip install pyCubes Usage: First you need to create application instance: import cubes app = cubes . Application () After that add a low-level handler: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ): print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) All that remains is to launch the application: app . run ( '127.0.0.1' , 25565 ) A more detailed example can be found here . All packages are described here . Development Run formatting: make format Run linters: make lint Run tests: make test","title":"pyCubes"},{"location":"#pycubes","text":"pyCubes is a library for serializing and deserializing Minecraft Java Edition packets. \u2757 0.x versions are not stable. The library API is subject to change. \u0420\u0443\u0441\u0441\u043a\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f Installation: pip install pyCubes","title":"pyCubes"},{"location":"#usage","text":"First you need to create application instance: import cubes app = cubes . Application () After that add a low-level handler: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ): print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) All that remains is to launch the application: app . run ( '127.0.0.1' , 25565 ) A more detailed example can be found here . All packages are described here .","title":"Usage:"},{"location":"#development","text":"Run formatting: make format Run linters: make lint Run tests: make test","title":"Development"},{"location":"migrations/02/","text":"0.1 -> 0.2 original","title":"0.1 -> 0.2"},{"location":"migrations/02/#01-02","text":"original","title":"0.1 -&gt; 0.2"},{"location":"reference/app/","text":"module app class GracefulExit Exception raising when server should stop. class Application Class for creating Minecraft Java Edition server implemetation. method __init__ __init__ ( packet_read_timeout : int = 20 , process_packet_timeout : int = 20 ) property unhandled_packet_handler method add_low_level_handler add_low_level_handler ( conn_status : ConnectionStatus , packet_id : int , func : Callable [[ int , AbstractReadBuffer ], Coroutine ] ) \u2192 None Adds packet handler. Raises: ValueError : when handler with the same filter (conn_status and packet_id) already added Examples: app.add_low_level_handler(cubes.ConnectionStatus.HANDSHAKE, 0x00, process_handshake) method run run ( host : str , port : int = 25565 ) \u2192 None Starts application.","title":"app"},{"location":"reference/app/#module-app","text":"","title":"module app"},{"location":"reference/app/#class-gracefulexit","text":"Exception raising when server should stop.","title":"class GracefulExit"},{"location":"reference/app/#class-application","text":"Class for creating Minecraft Java Edition server implemetation.","title":"class Application"},{"location":"reference/app/#method-__init__","text":"__init__ ( packet_read_timeout : int = 20 , process_packet_timeout : int = 20 )","title":"method __init__"},{"location":"reference/app/#property-unhandled_packet_handler","text":"","title":"property unhandled_packet_handler"},{"location":"reference/app/#method-add_low_level_handler","text":"add_low_level_handler ( conn_status : ConnectionStatus , packet_id : int , func : Callable [[ int , AbstractReadBuffer ], Coroutine ] ) \u2192 None Adds packet handler. Raises: ValueError : when handler with the same filter (conn_status and packet_id) already added Examples: app.add_low_level_handler(cubes.ConnectionStatus.HANDSHAKE, 0x00, process_handshake)","title":"method add_low_level_handler"},{"location":"reference/app/#method-run","text":"run ( host : str , port : int = 25565 ) \u2192 None Starts application.","title":"method run"},{"location":"reference/buffer/","text":"module buffer class CubesBufferError Exception raising when buffer can't be reader or created. class EmptyBufferError Exception raising when buffer is empty. class InvalidLengthError Exception raising when packet length (VarInt) can't be readed. class ReadBuffer Class for parsing data by types. method __init__ __init__ ( conn : Union [ AbstractPlayerConnection , AbstractClientConnection ], data : bytes = b '' ) property boolean Either False or True. property byte Signed 8-bit integer. property connection Current connection. property data Buffer data. property double Signed 64-bit float. property float Signed 32-bit float. property integer Signed 32-bit integer. property long Signed 64-bit integer. property short Signed 16-bit integer. property string UTF-8 string. Note: Max string length is 32767 (b'\\xff\\xff\\x01') bytes \u2014 3 bytes VarInt prefix. property unsigned_byte Unsigned 8-bit integer. property unsigned_short Unsigned 16-bit integer. property varint Variable-length integer. property varlong Variable-length integer. classmethod from_reader from_reader ( conn : Union [ AbstractPlayerConnection , AbstractClientConnection ], reader : StreamReader ) \u2192 AbstractReadBuffer Creates a ReadBuffer instance from asyncio.StreamReader. Note: Packet length is 2097151 (b'\\xff\\xff\\x7f') bytes \u2014 3 bytes VarInt prefix. Raises: EmptyBufferError : when buffer is empty InvalidLengthError : when packet length (VarInt) can't be reader Todo: * implement compression method read read ( length : Optional [ int ] = None ) \u2192 bytes Reads length bytes from buffer. Note: If length <= 0 or None returns all buffer data from current position. Args: length : number of bytes to read class WriteBuffer Class for serializing data by types. property data Buffer data. property packed Packed buffer data. Todo: * implement compression","title":"buffer"},{"location":"reference/buffer/#module-buffer","text":"","title":"module buffer"},{"location":"reference/buffer/#class-cubesbuffererror","text":"Exception raising when buffer can't be reader or created.","title":"class CubesBufferError"},{"location":"reference/buffer/#class-emptybuffererror","text":"Exception raising when buffer is empty.","title":"class EmptyBufferError"},{"location":"reference/buffer/#class-invalidlengtherror","text":"Exception raising when packet length (VarInt) can't be readed.","title":"class InvalidLengthError"},{"location":"reference/buffer/#class-readbuffer","text":"Class for parsing data by types.","title":"class ReadBuffer"},{"location":"reference/buffer/#method-__init__","text":"__init__ ( conn : Union [ AbstractPlayerConnection , AbstractClientConnection ], data : bytes = b '' )","title":"method __init__"},{"location":"reference/buffer/#property-boolean","text":"Either False or True.","title":"property boolean"},{"location":"reference/buffer/#property-byte","text":"Signed 8-bit integer.","title":"property byte"},{"location":"reference/buffer/#property-connection","text":"Current connection.","title":"property connection"},{"location":"reference/buffer/#property-data","text":"Buffer data.","title":"property data"},{"location":"reference/buffer/#property-double","text":"Signed 64-bit float.","title":"property double"},{"location":"reference/buffer/#property-float","text":"Signed 32-bit float.","title":"property float"},{"location":"reference/buffer/#property-integer","text":"Signed 32-bit integer.","title":"property integer"},{"location":"reference/buffer/#property-long","text":"Signed 64-bit integer.","title":"property long"},{"location":"reference/buffer/#property-short","text":"Signed 16-bit integer.","title":"property short"},{"location":"reference/buffer/#property-string","text":"UTF-8 string. Note: Max string length is 32767 (b'\\xff\\xff\\x01') bytes \u2014 3 bytes VarInt prefix.","title":"property string"},{"location":"reference/buffer/#property-unsigned_byte","text":"Unsigned 8-bit integer.","title":"property unsigned_byte"},{"location":"reference/buffer/#property-unsigned_short","text":"Unsigned 16-bit integer.","title":"property unsigned_short"},{"location":"reference/buffer/#property-varint","text":"Variable-length integer.","title":"property varint"},{"location":"reference/buffer/#property-varlong","text":"Variable-length integer.","title":"property varlong"},{"location":"reference/buffer/#classmethod-from_reader","text":"from_reader ( conn : Union [ AbstractPlayerConnection , AbstractClientConnection ], reader : StreamReader ) \u2192 AbstractReadBuffer Creates a ReadBuffer instance from asyncio.StreamReader. Note: Packet length is 2097151 (b'\\xff\\xff\\x7f') bytes \u2014 3 bytes VarInt prefix. Raises: EmptyBufferError : when buffer is empty InvalidLengthError : when packet length (VarInt) can't be reader Todo: * implement compression","title":"classmethod from_reader"},{"location":"reference/buffer/#method-read","text":"read ( length : Optional [ int ] = None ) \u2192 bytes Reads length bytes from buffer. Note: If length <= 0 or None returns all buffer data from current position. Args: length : number of bytes to read","title":"method read"},{"location":"reference/buffer/#class-writebuffer","text":"Class for serializing data by types.","title":"class WriteBuffer"},{"location":"reference/buffer/#property-data_1","text":"Buffer data.","title":"property data"},{"location":"reference/buffer/#property-packed","text":"Packed buffer data. Todo: * implement compression","title":"property packed"},{"location":"reference/connection/","text":"module connection class CloseConnection Raising when connection should be closed. method __init__ __init__ ( reason : Optional [ str ] = None ) class DisconnectedByServerError Raising when server sends disconnect packet. method __init__ __init__ ( state : ConnectionStatus , reason : str ) \u2192 None class UnexpectedPacketError Raising when server sends unexpected packet. method __init__ __init__ ( packet_id : int ) \u2192 None class InvalidPlayerNameError Raising when server sent Login Success packet with invalid player name. method __init__ __init__ ( valid_name : str , invalid_name : str ) \u2192 None class PlayerConnection Player-to-server connection. Attributes: status (cubes.ConnectionStatus): Connection status. method __init__ __init__ ( reader : StreamReader , writer : StreamWriter , app : Application ) property app Current application. property is_closing Is connection closing. property peername Client host and port. property sockname Server host and port. method close close ( reason : Optional [ str ] = None ) \u2192 None Closes connection. method read_packet read_packet () \u2192 Optional [ AbstractReadBuffer ] Reads a packet. method send_packet send_packet ( buffer : AbstractWriteBuffer ) \u2192 None Sends packet. method wait_packet wait_packet () \u2192 AbstractReadBuffer Waits and reads a packet. class ClientConnection Client connection. Attributes: status (cubes.ConnectionStatus): Connection status method __init__ __init__ ( reader : StreamReader , writer : StreamWriter , player : PlayerData ) property is_closing Is connection closing. property peername Client host and port. property player Player data (UUID and name). property sockname Server host and port. method close close () \u2192 None Closes connection. classmethod connect connect ( host : str , port : int , protocol : int , player_name : str ) \u2192 AbstractClientConnection method read_packet read_packet () \u2192 Optional [ AbstractReadBuffer ] Reads a packet. method send_packet send_packet ( buffer : AbstractWriteBuffer ) \u2192 None Sends packet. method wait_packet wait_packet () \u2192 AbstractReadBuffer Waits and reads a packet.","title":"connection"},{"location":"reference/connection/#module-connection","text":"","title":"module connection"},{"location":"reference/connection/#class-closeconnection","text":"Raising when connection should be closed.","title":"class CloseConnection"},{"location":"reference/connection/#method-__init__","text":"__init__ ( reason : Optional [ str ] = None )","title":"method __init__"},{"location":"reference/connection/#class-disconnectedbyservererror","text":"Raising when server sends disconnect packet.","title":"class DisconnectedByServerError"},{"location":"reference/connection/#method-__init___1","text":"__init__ ( state : ConnectionStatus , reason : str ) \u2192 None","title":"method __init__"},{"location":"reference/connection/#class-unexpectedpacketerror","text":"Raising when server sends unexpected packet.","title":"class UnexpectedPacketError"},{"location":"reference/connection/#method-__init___2","text":"__init__ ( packet_id : int ) \u2192 None","title":"method __init__"},{"location":"reference/connection/#class-invalidplayernameerror","text":"Raising when server sent Login Success packet with invalid player name.","title":"class InvalidPlayerNameError"},{"location":"reference/connection/#method-__init___3","text":"__init__ ( valid_name : str , invalid_name : str ) \u2192 None","title":"method __init__"},{"location":"reference/connection/#class-playerconnection","text":"Player-to-server connection. Attributes: status (cubes.ConnectionStatus): Connection status.","title":"class PlayerConnection"},{"location":"reference/connection/#method-__init___4","text":"__init__ ( reader : StreamReader , writer : StreamWriter , app : Application )","title":"method __init__"},{"location":"reference/connection/#property-app","text":"Current application.","title":"property app"},{"location":"reference/connection/#property-is_closing","text":"Is connection closing.","title":"property is_closing"},{"location":"reference/connection/#property-peername","text":"Client host and port.","title":"property peername"},{"location":"reference/connection/#property-sockname","text":"Server host and port.","title":"property sockname"},{"location":"reference/connection/#method-close","text":"close ( reason : Optional [ str ] = None ) \u2192 None Closes connection.","title":"method close"},{"location":"reference/connection/#method-read_packet","text":"read_packet () \u2192 Optional [ AbstractReadBuffer ] Reads a packet.","title":"method read_packet"},{"location":"reference/connection/#method-send_packet","text":"send_packet ( buffer : AbstractWriteBuffer ) \u2192 None Sends packet.","title":"method send_packet"},{"location":"reference/connection/#method-wait_packet","text":"wait_packet () \u2192 AbstractReadBuffer Waits and reads a packet.","title":"method wait_packet"},{"location":"reference/connection/#class-clientconnection","text":"Client connection. Attributes: status (cubes.ConnectionStatus): Connection status","title":"class ClientConnection"},{"location":"reference/connection/#method-__init___5","text":"__init__ ( reader : StreamReader , writer : StreamWriter , player : PlayerData )","title":"method __init__"},{"location":"reference/connection/#property-is_closing_1","text":"Is connection closing.","title":"property is_closing"},{"location":"reference/connection/#property-peername_1","text":"Client host and port.","title":"property peername"},{"location":"reference/connection/#property-player","text":"Player data (UUID and name).","title":"property player"},{"location":"reference/connection/#property-sockname_1","text":"Server host and port.","title":"property sockname"},{"location":"reference/connection/#method-close_1","text":"close () \u2192 None Closes connection.","title":"method close"},{"location":"reference/connection/#classmethod-connect","text":"connect ( host : str , port : int , protocol : int , player_name : str ) \u2192 AbstractClientConnection","title":"classmethod connect"},{"location":"reference/connection/#method-read_packet_1","text":"read_packet () \u2192 Optional [ AbstractReadBuffer ] Reads a packet.","title":"method read_packet"},{"location":"reference/connection/#method-send_packet_1","text":"send_packet ( buffer : AbstractWriteBuffer ) \u2192 None Sends packet.","title":"method send_packet"},{"location":"reference/connection/#method-wait_packet_1","text":"wait_packet () \u2192 AbstractReadBuffer Waits and reads a packet.","title":"method wait_packet"},{"location":"reference/types/","text":"module types Define names for built-in types that aren't directly accessible as a builtin. function new_class new_class ( name , bases = (), kwds = None , exec_body = None ) Create a class object dynamically using the appropriate metaclass. function resolve_bases resolve_bases ( bases ) Resolve MRO entries dynamically as specified by PEP 560. function prepare_class prepare_class ( name , bases = (), kwds = None ) Call the prepare method of the appropriate metaclass. Returns (metaclass, namespace, kwds) as a 3-tuple metaclass is the appropriate metaclass namespace is the prepared class namespace kwds is an updated copy of the passed in kwds argument with any 'metaclass' entry removed. If no kwds argument is passed in, this will be an empty dict. function coroutine coroutine ( func ) Convert regular generator function to a coroutine. class DynamicClassAttribute Route attribute access on a class to getattr . This is a descriptor, used to define attributes that act differently when accessed through an instance and through a class. Instance access remains normal, but access to an attribute through a class will be routed to the class's getattr method; this is done by raising AttributeError. This allows one to have properties active on an instance, and have virtual attributes on the class with the same name (see Enum for an example). method __init__ __init__ ( fget = None , fset = None , fdel = None , doc = None ) method deleter deleter ( fdel ) method getter getter ( fget ) method setter setter ( fset ) class GenericAlias Represent a PEP 585 generic type E.g. for t = list[int], t. origin is list and t. args is (int,). class SimpleNamespace A simple attribute-based namespace. SimpleNamespace(**kwargs) class ConnectionStatus An enumeration. class PlayerData Class for storing the most important player data. method __init__ __init__ ( uuid : UUID , name : str ) property name Player name. property uuid Player UUID.","title":"types"},{"location":"reference/types/#module-types","text":"Define names for built-in types that aren't directly accessible as a builtin.","title":"module types"},{"location":"reference/types/#function-new_class","text":"new_class ( name , bases = (), kwds = None , exec_body = None ) Create a class object dynamically using the appropriate metaclass.","title":"function new_class"},{"location":"reference/types/#function-resolve_bases","text":"resolve_bases ( bases ) Resolve MRO entries dynamically as specified by PEP 560.","title":"function resolve_bases"},{"location":"reference/types/#function-prepare_class","text":"prepare_class ( name , bases = (), kwds = None ) Call the prepare method of the appropriate metaclass. Returns (metaclass, namespace, kwds) as a 3-tuple metaclass is the appropriate metaclass namespace is the prepared class namespace kwds is an updated copy of the passed in kwds argument with any 'metaclass' entry removed. If no kwds argument is passed in, this will be an empty dict.","title":"function prepare_class"},{"location":"reference/types/#function-coroutine","text":"coroutine ( func ) Convert regular generator function to a coroutine.","title":"function coroutine"},{"location":"reference/types/#class-dynamicclassattribute","text":"Route attribute access on a class to getattr . This is a descriptor, used to define attributes that act differently when accessed through an instance and through a class. Instance access remains normal, but access to an attribute through a class will be routed to the class's getattr method; this is done by raising AttributeError. This allows one to have properties active on an instance, and have virtual attributes on the class with the same name (see Enum for an example).","title":"class DynamicClassAttribute"},{"location":"reference/types/#method-__init__","text":"__init__ ( fget = None , fset = None , fdel = None , doc = None )","title":"method __init__"},{"location":"reference/types/#method-deleter","text":"deleter ( fdel )","title":"method deleter"},{"location":"reference/types/#method-getter","text":"getter ( fget )","title":"method getter"},{"location":"reference/types/#method-setter","text":"setter ( fset )","title":"method setter"},{"location":"reference/types/#class-genericalias","text":"Represent a PEP 585 generic type E.g. for t = list[int], t. origin is list and t. args is (int,).","title":"class GenericAlias"},{"location":"reference/types/#class-simplenamespace","text":"A simple attribute-based namespace. SimpleNamespace(**kwargs)","title":"class SimpleNamespace"},{"location":"reference/types/#class-connectionstatus","text":"An enumeration.","title":"class ConnectionStatus"},{"location":"reference/types/#class-playerdata","text":"Class for storing the most important player data.","title":"class PlayerData"},{"location":"reference/types/#method-__init___1","text":"__init__ ( uuid : UUID , name : str )","title":"method __init__"},{"location":"reference/types/#property-name","text":"Player name.","title":"property name"},{"location":"reference/types/#property-uuid","text":"Player UUID.","title":"property uuid"},{"location":"reference/utils/","text":"module utils function generate_uuid generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"utils"},{"location":"reference/utils/#module-utils","text":"","title":"module utils"},{"location":"reference/utils/#function-generate_uuid","text":"generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"function generate_uuid"},{"location":"ru/","text":"pyCubes pyCubes \u2014 \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0430\u043a\u0435\u0442\u043e\u0432 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 Minecraft Java Edition. \u2757 0.x \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b, API \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: pip install pyCubes \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: import cubes app = cubes . Application () \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043d\u0438\u0437\u043a\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u044b\u0439 \u0445\u0435\u043d\u0434\u043b\u0435\u0440: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ) -> None : print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) \u041e\u0441\u0442\u0430\u0451\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435: app . run ( '127.0.0.1' , 25565 ) \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c . \u0412\u0441\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0437\u0434\u0435\u0441\u044c . \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0417\u0430\u043f\u0443\u0441\u043a \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: make format \u0417\u0430\u043f\u0443\u0441\u043a \u043b\u0438\u043d\u0442\u0435\u0440\u043e\u0432: make lint \u0417\u0430\u043f\u0443\u0441\u043a \u0442\u0435\u0441\u0442\u043e\u0432: make test","title":"pyCubes"},{"location":"ru/#pycubes","text":"pyCubes \u2014 \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0430\u043a\u0435\u0442\u043e\u0432 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 Minecraft Java Edition. \u2757 0.x \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b, API \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: pip install pyCubes","title":"pyCubes"},{"location":"ru/#_1","text":"\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: import cubes app = cubes . Application () \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043d\u0438\u0437\u043a\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u044b\u0439 \u0445\u0435\u043d\u0434\u043b\u0435\u0440: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ) -> None : print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) \u041e\u0441\u0442\u0430\u0451\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435: app . run ( '127.0.0.1' , 25565 ) \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c . \u0412\u0441\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0437\u0434\u0435\u0441\u044c .","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"ru/#_2","text":"\u0417\u0430\u043f\u0443\u0441\u043a \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: make format \u0417\u0430\u043f\u0443\u0441\u043a \u043b\u0438\u043d\u0442\u0435\u0440\u043e\u0432: make lint \u0417\u0430\u043f\u0443\u0441\u043a \u0442\u0435\u0441\u0442\u043e\u0432: make test","title":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430"},{"location":"ru/migrations/02/","text":"0.1 -> 0.2 \u0440\u0443\u0441\u0441\u043a\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f","title":"0.1 -> 0.2"},{"location":"ru/migrations/02/#01-02","text":"\u0440\u0443\u0441\u0441\u043a\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f","title":"0.1 -&gt; 0.2"},{"location":"ru/reference/app/","text":"module app class GracefulExit Exception raising when server should stop. class Application Class for creating Minecraft Java Edition server implemetation. method __init__ __init__ ( packet_read_timeout : int = 20 , process_packet_timeout : int = 20 ) property unhandled_packet_handler method add_low_level_handler add_low_level_handler ( conn_status : ConnectionStatus , packet_id : int , func : Callable [[ int , AbstractReadBuffer ], Coroutine ] ) \u2192 None Adds packet handler. Raises: ValueError : when handler with the same filter (conn_status and packet_id) already added Examples: app.add_low_level_handler(cubes.ConnectionStatus.HANDSHAKE, 0x00, process_handshake) method run run ( host : str , port : int = 25565 ) \u2192 None Starts application.","title":"app"},{"location":"ru/reference/app/#module-app","text":"","title":"module app"},{"location":"ru/reference/app/#class-gracefulexit","text":"Exception raising when server should stop.","title":"class GracefulExit"},{"location":"ru/reference/app/#class-application","text":"Class for creating Minecraft Java Edition server implemetation.","title":"class Application"},{"location":"ru/reference/app/#method-__init__","text":"__init__ ( packet_read_timeout : int = 20 , process_packet_timeout : int = 20 )","title":"method __init__"},{"location":"ru/reference/app/#property-unhandled_packet_handler","text":"","title":"property unhandled_packet_handler"},{"location":"ru/reference/app/#method-add_low_level_handler","text":"add_low_level_handler ( conn_status : ConnectionStatus , packet_id : int , func : Callable [[ int , AbstractReadBuffer ], Coroutine ] ) \u2192 None Adds packet handler. Raises: ValueError : when handler with the same filter (conn_status and packet_id) already added Examples: app.add_low_level_handler(cubes.ConnectionStatus.HANDSHAKE, 0x00, process_handshake)","title":"method add_low_level_handler"},{"location":"ru/reference/app/#method-run","text":"run ( host : str , port : int = 25565 ) \u2192 None Starts application.","title":"method run"},{"location":"ru/reference/buffer/","text":"module buffer class CubesBufferError Exception raising when buffer can't be reader or created. class EmptyBufferError Exception raising when buffer is empty. class InvalidLengthError Exception raising when packet length (VarInt) can't be readed. class ReadBuffer Class for parsing data by types. method __init__ __init__ ( conn : Union [ AbstractPlayerConnection , AbstractClientConnection ], data : bytes = b '' ) property boolean Either False or True. property byte Signed 8-bit integer. property connection Current connection. property data Buffer data. property double Signed 64-bit float. property float Signed 32-bit float. property integer Signed 32-bit integer. property long Signed 64-bit integer. property short Signed 16-bit integer. property string UTF-8 string. Note: Max string length is 32767 (b'\\xff\\xff\\x01') bytes \u2014 3 bytes VarInt prefix. property unsigned_byte Unsigned 8-bit integer. property unsigned_short Unsigned 16-bit integer. property varint Variable-length integer. property varlong Variable-length integer. classmethod from_reader from_reader ( conn : Union [ AbstractPlayerConnection , AbstractClientConnection ], reader : StreamReader ) \u2192 AbstractReadBuffer Creates a ReadBuffer instance from asyncio.StreamReader. Note: Packet length is 2097151 (b'\\xff\\xff\\x7f') bytes \u2014 3 bytes VarInt prefix. Raises: EmptyBufferError : when buffer is empty InvalidLengthError : when packet length (VarInt) can't be reader Todo: * implement compression method read read ( length : Optional [ int ] = None ) \u2192 bytes Reads length bytes from buffer. Note: If length <= 0 or None returns all buffer data from current position. Args: length : number of bytes to read class WriteBuffer Class for serializing data by types. property data Buffer data. property packed Packed buffer data. Todo: * implement compression","title":"buffer"},{"location":"ru/reference/buffer/#module-buffer","text":"","title":"module buffer"},{"location":"ru/reference/buffer/#class-cubesbuffererror","text":"Exception raising when buffer can't be reader or created.","title":"class CubesBufferError"},{"location":"ru/reference/buffer/#class-emptybuffererror","text":"Exception raising when buffer is empty.","title":"class EmptyBufferError"},{"location":"ru/reference/buffer/#class-invalidlengtherror","text":"Exception raising when packet length (VarInt) can't be readed.","title":"class InvalidLengthError"},{"location":"ru/reference/buffer/#class-readbuffer","text":"Class for parsing data by types.","title":"class ReadBuffer"},{"location":"ru/reference/buffer/#method-__init__","text":"__init__ ( conn : Union [ AbstractPlayerConnection , AbstractClientConnection ], data : bytes = b '' )","title":"method __init__"},{"location":"ru/reference/buffer/#property-boolean","text":"Either False or True.","title":"property boolean"},{"location":"ru/reference/buffer/#property-byte","text":"Signed 8-bit integer.","title":"property byte"},{"location":"ru/reference/buffer/#property-connection","text":"Current connection.","title":"property connection"},{"location":"ru/reference/buffer/#property-data","text":"Buffer data.","title":"property data"},{"location":"ru/reference/buffer/#property-double","text":"Signed 64-bit float.","title":"property double"},{"location":"ru/reference/buffer/#property-float","text":"Signed 32-bit float.","title":"property float"},{"location":"ru/reference/buffer/#property-integer","text":"Signed 32-bit integer.","title":"property integer"},{"location":"ru/reference/buffer/#property-long","text":"Signed 64-bit integer.","title":"property long"},{"location":"ru/reference/buffer/#property-short","text":"Signed 16-bit integer.","title":"property short"},{"location":"ru/reference/buffer/#property-string","text":"UTF-8 string. Note: Max string length is 32767 (b'\\xff\\xff\\x01') bytes \u2014 3 bytes VarInt prefix.","title":"property string"},{"location":"ru/reference/buffer/#property-unsigned_byte","text":"Unsigned 8-bit integer.","title":"property unsigned_byte"},{"location":"ru/reference/buffer/#property-unsigned_short","text":"Unsigned 16-bit integer.","title":"property unsigned_short"},{"location":"ru/reference/buffer/#property-varint","text":"Variable-length integer.","title":"property varint"},{"location":"ru/reference/buffer/#property-varlong","text":"Variable-length integer.","title":"property varlong"},{"location":"ru/reference/buffer/#classmethod-from_reader","text":"from_reader ( conn : Union [ AbstractPlayerConnection , AbstractClientConnection ], reader : StreamReader ) \u2192 AbstractReadBuffer Creates a ReadBuffer instance from asyncio.StreamReader. Note: Packet length is 2097151 (b'\\xff\\xff\\x7f') bytes \u2014 3 bytes VarInt prefix. Raises: EmptyBufferError : when buffer is empty InvalidLengthError : when packet length (VarInt) can't be reader Todo: * implement compression","title":"classmethod from_reader"},{"location":"ru/reference/buffer/#method-read","text":"read ( length : Optional [ int ] = None ) \u2192 bytes Reads length bytes from buffer. Note: If length <= 0 or None returns all buffer data from current position. Args: length : number of bytes to read","title":"method read"},{"location":"ru/reference/buffer/#class-writebuffer","text":"Class for serializing data by types.","title":"class WriteBuffer"},{"location":"ru/reference/buffer/#property-data_1","text":"Buffer data.","title":"property data"},{"location":"ru/reference/buffer/#property-packed","text":"Packed buffer data. Todo: * implement compression","title":"property packed"},{"location":"ru/reference/connection/","text":"module connection class CloseConnection Raising when connection should be closed. method __init__ __init__ ( reason : Optional [ str ] = None ) class DisconnectedByServerError Raising when server sends disconnect packet. method __init__ __init__ ( state : ConnectionStatus , reason : str ) \u2192 None class UnexpectedPacketError Raising when server sends unexpected packet. method __init__ __init__ ( packet_id : int ) \u2192 None class InvalidPlayerNameError Raising when server sent Login Success packet with invalid player name. method __init__ __init__ ( valid_name : str , invalid_name : str ) \u2192 None class PlayerConnection Player-to-server connection. Attributes: status (cubes.ConnectionStatus): Connection status. method __init__ __init__ ( reader : StreamReader , writer : StreamWriter , app : Application ) property app Current application. property is_closing Is connection closing. property peername Client host and port. property sockname Server host and port. method close close ( reason : Optional [ str ] = None ) \u2192 None Closes connection. method read_packet read_packet () \u2192 Optional [ AbstractReadBuffer ] Reads a packet. method send_packet send_packet ( buffer : AbstractWriteBuffer ) \u2192 None Sends packet. method wait_packet wait_packet () \u2192 AbstractReadBuffer Waits and reads a packet. class ClientConnection Client connection. Attributes: status (cubes.ConnectionStatus): Connection status method __init__ __init__ ( reader : StreamReader , writer : StreamWriter , player : PlayerData ) property is_closing Is connection closing. property peername Client host and port. property player Player data (UUID and name). property sockname Server host and port. method close close () \u2192 None Closes connection. classmethod connect connect ( host : str , port : int , protocol : int , player_name : str ) \u2192 AbstractClientConnection method read_packet read_packet () \u2192 Optional [ AbstractReadBuffer ] Reads a packet. method send_packet send_packet ( buffer : AbstractWriteBuffer ) \u2192 None Sends packet. method wait_packet wait_packet () \u2192 AbstractReadBuffer Waits and reads a packet.","title":"connection"},{"location":"ru/reference/connection/#module-connection","text":"","title":"module connection"},{"location":"ru/reference/connection/#class-closeconnection","text":"Raising when connection should be closed.","title":"class CloseConnection"},{"location":"ru/reference/connection/#method-__init__","text":"__init__ ( reason : Optional [ str ] = None )","title":"method __init__"},{"location":"ru/reference/connection/#class-disconnectedbyservererror","text":"Raising when server sends disconnect packet.","title":"class DisconnectedByServerError"},{"location":"ru/reference/connection/#method-__init___1","text":"__init__ ( state : ConnectionStatus , reason : str ) \u2192 None","title":"method __init__"},{"location":"ru/reference/connection/#class-unexpectedpacketerror","text":"Raising when server sends unexpected packet.","title":"class UnexpectedPacketError"},{"location":"ru/reference/connection/#method-__init___2","text":"__init__ ( packet_id : int ) \u2192 None","title":"method __init__"},{"location":"ru/reference/connection/#class-invalidplayernameerror","text":"Raising when server sent Login Success packet with invalid player name.","title":"class InvalidPlayerNameError"},{"location":"ru/reference/connection/#method-__init___3","text":"__init__ ( valid_name : str , invalid_name : str ) \u2192 None","title":"method __init__"},{"location":"ru/reference/connection/#class-playerconnection","text":"Player-to-server connection. Attributes: status (cubes.ConnectionStatus): Connection status.","title":"class PlayerConnection"},{"location":"ru/reference/connection/#method-__init___4","text":"__init__ ( reader : StreamReader , writer : StreamWriter , app : Application )","title":"method __init__"},{"location":"ru/reference/connection/#property-app","text":"Current application.","title":"property app"},{"location":"ru/reference/connection/#property-is_closing","text":"Is connection closing.","title":"property is_closing"},{"location":"ru/reference/connection/#property-peername","text":"Client host and port.","title":"property peername"},{"location":"ru/reference/connection/#property-sockname","text":"Server host and port.","title":"property sockname"},{"location":"ru/reference/connection/#method-close","text":"close ( reason : Optional [ str ] = None ) \u2192 None Closes connection.","title":"method close"},{"location":"ru/reference/connection/#method-read_packet","text":"read_packet () \u2192 Optional [ AbstractReadBuffer ] Reads a packet.","title":"method read_packet"},{"location":"ru/reference/connection/#method-send_packet","text":"send_packet ( buffer : AbstractWriteBuffer ) \u2192 None Sends packet.","title":"method send_packet"},{"location":"ru/reference/connection/#method-wait_packet","text":"wait_packet () \u2192 AbstractReadBuffer Waits and reads a packet.","title":"method wait_packet"},{"location":"ru/reference/connection/#class-clientconnection","text":"Client connection. Attributes: status (cubes.ConnectionStatus): Connection status","title":"class ClientConnection"},{"location":"ru/reference/connection/#method-__init___5","text":"__init__ ( reader : StreamReader , writer : StreamWriter , player : PlayerData )","title":"method __init__"},{"location":"ru/reference/connection/#property-is_closing_1","text":"Is connection closing.","title":"property is_closing"},{"location":"ru/reference/connection/#property-peername_1","text":"Client host and port.","title":"property peername"},{"location":"ru/reference/connection/#property-player","text":"Player data (UUID and name).","title":"property player"},{"location":"ru/reference/connection/#property-sockname_1","text":"Server host and port.","title":"property sockname"},{"location":"ru/reference/connection/#method-close_1","text":"close () \u2192 None Closes connection.","title":"method close"},{"location":"ru/reference/connection/#classmethod-connect","text":"connect ( host : str , port : int , protocol : int , player_name : str ) \u2192 AbstractClientConnection","title":"classmethod connect"},{"location":"ru/reference/connection/#method-read_packet_1","text":"read_packet () \u2192 Optional [ AbstractReadBuffer ] Reads a packet.","title":"method read_packet"},{"location":"ru/reference/connection/#method-send_packet_1","text":"send_packet ( buffer : AbstractWriteBuffer ) \u2192 None Sends packet.","title":"method send_packet"},{"location":"ru/reference/connection/#method-wait_packet_1","text":"wait_packet () \u2192 AbstractReadBuffer Waits and reads a packet.","title":"method wait_packet"},{"location":"ru/reference/types/","text":"module types Define names for built-in types that aren't directly accessible as a builtin. function new_class new_class ( name , bases = (), kwds = None , exec_body = None ) Create a class object dynamically using the appropriate metaclass. function resolve_bases resolve_bases ( bases ) Resolve MRO entries dynamically as specified by PEP 560. function prepare_class prepare_class ( name , bases = (), kwds = None ) Call the prepare method of the appropriate metaclass. Returns (metaclass, namespace, kwds) as a 3-tuple metaclass is the appropriate metaclass namespace is the prepared class namespace kwds is an updated copy of the passed in kwds argument with any 'metaclass' entry removed. If no kwds argument is passed in, this will be an empty dict. function coroutine coroutine ( func ) Convert regular generator function to a coroutine. class DynamicClassAttribute Route attribute access on a class to getattr . This is a descriptor, used to define attributes that act differently when accessed through an instance and through a class. Instance access remains normal, but access to an attribute through a class will be routed to the class's getattr method; this is done by raising AttributeError. This allows one to have properties active on an instance, and have virtual attributes on the class with the same name (see Enum for an example). method __init__ __init__ ( fget = None , fset = None , fdel = None , doc = None ) method deleter deleter ( fdel ) method getter getter ( fget ) method setter setter ( fset ) class GenericAlias Represent a PEP 585 generic type E.g. for t = list[int], t. origin is list and t. args is (int,). class SimpleNamespace A simple attribute-based namespace. SimpleNamespace(**kwargs) class ConnectionStatus An enumeration. class PlayerData Class for storing the most important player data. method __init__ __init__ ( uuid : UUID , name : str ) property name Player name. property uuid Player UUID.","title":"types"},{"location":"ru/reference/types/#module-types","text":"Define names for built-in types that aren't directly accessible as a builtin.","title":"module types"},{"location":"ru/reference/types/#function-new_class","text":"new_class ( name , bases = (), kwds = None , exec_body = None ) Create a class object dynamically using the appropriate metaclass.","title":"function new_class"},{"location":"ru/reference/types/#function-resolve_bases","text":"resolve_bases ( bases ) Resolve MRO entries dynamically as specified by PEP 560.","title":"function resolve_bases"},{"location":"ru/reference/types/#function-prepare_class","text":"prepare_class ( name , bases = (), kwds = None ) Call the prepare method of the appropriate metaclass. Returns (metaclass, namespace, kwds) as a 3-tuple metaclass is the appropriate metaclass namespace is the prepared class namespace kwds is an updated copy of the passed in kwds argument with any 'metaclass' entry removed. If no kwds argument is passed in, this will be an empty dict.","title":"function prepare_class"},{"location":"ru/reference/types/#function-coroutine","text":"coroutine ( func ) Convert regular generator function to a coroutine.","title":"function coroutine"},{"location":"ru/reference/types/#class-dynamicclassattribute","text":"Route attribute access on a class to getattr . This is a descriptor, used to define attributes that act differently when accessed through an instance and through a class. Instance access remains normal, but access to an attribute through a class will be routed to the class's getattr method; this is done by raising AttributeError. This allows one to have properties active on an instance, and have virtual attributes on the class with the same name (see Enum for an example).","title":"class DynamicClassAttribute"},{"location":"ru/reference/types/#method-__init__","text":"__init__ ( fget = None , fset = None , fdel = None , doc = None )","title":"method __init__"},{"location":"ru/reference/types/#method-deleter","text":"deleter ( fdel )","title":"method deleter"},{"location":"ru/reference/types/#method-getter","text":"getter ( fget )","title":"method getter"},{"location":"ru/reference/types/#method-setter","text":"setter ( fset )","title":"method setter"},{"location":"ru/reference/types/#class-genericalias","text":"Represent a PEP 585 generic type E.g. for t = list[int], t. origin is list and t. args is (int,).","title":"class GenericAlias"},{"location":"ru/reference/types/#class-simplenamespace","text":"A simple attribute-based namespace. SimpleNamespace(**kwargs)","title":"class SimpleNamespace"},{"location":"ru/reference/types/#class-connectionstatus","text":"An enumeration.","title":"class ConnectionStatus"},{"location":"ru/reference/types/#class-playerdata","text":"Class for storing the most important player data.","title":"class PlayerData"},{"location":"ru/reference/types/#method-__init___1","text":"__init__ ( uuid : UUID , name : str )","title":"method __init__"},{"location":"ru/reference/types/#property-name","text":"Player name.","title":"property name"},{"location":"ru/reference/types/#property-uuid","text":"Player UUID.","title":"property uuid"},{"location":"ru/reference/utils/","text":"module utils function generate_uuid generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"utils"},{"location":"ru/reference/utils/#module-utils","text":"","title":"module utils"},{"location":"ru/reference/utils/#function-generate_uuid","text":"generate_uuid ( player_name : str ) \u2192 UUID Generates UUID by player_name for using in offline mode.","title":"function generate_uuid"}]}