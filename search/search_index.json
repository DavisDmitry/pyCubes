{"config":{"indexing":"full","lang":["en","ru"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"pyCubes pyCubes is a library for creating servers and clients Minecraft Java Edition. \u2757 0.x versions are not stable. The library API is subject to change. Installation: pip install pyCubes Usage First you need to create application instance: import cubes app = cubes . Application () After that add a low-level handler: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ): print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) All that remains is to launch the application: app . run ( '127.0.0.1' , 25565 ) A more detailed example can be found here . All packages are described here .","title":"pyCubes"},{"location":"#pycubes","text":"pyCubes is a library for creating servers and clients Minecraft Java Edition. \u2757 0.x versions are not stable. The library API is subject to change. Installation: pip install pyCubes","title":"pyCubes"},{"location":"#usage","text":"First you need to create application instance: import cubes app = cubes . Application () After that add a low-level handler: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ): print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) All that remains is to launch the application: app . run ( '127.0.0.1' , 25565 ) A more detailed example can be found here . All packages are described here .","title":"Usage"},{"location":"dev/","text":"Development Scripts Run formatting make format Run linters make lint Run tests make test Change version It is necessary to create the environment variable VERSION . For example: export VERSION = 0 .4.0 Then just run the script: make edit-version Working with documentation First you need to install requirments: poetry install -E docs Validate docstrings in code make validate-docstrings Generate API Reference The environment variable VERSION is used for generation. It needs to be exported, for example: export VERSION = 0 .4.0 Generate: make docs-generate-reference Move current API Reference to Legacy make docs-move-to-legacy Run the development server make docs-serve Build (render) the docs make docs-build Build and deploy the documentation to github pages make docs-deploy","title":"Development"},{"location":"dev/#development","text":"","title":"Development"},{"location":"dev/#scripts","text":"","title":"Scripts"},{"location":"dev/#run-formatting","text":"make format","title":"Run formatting"},{"location":"dev/#run-linters","text":"make lint","title":"Run linters"},{"location":"dev/#run-tests","text":"make test","title":"Run tests"},{"location":"dev/#change-version","text":"It is necessary to create the environment variable VERSION . For example: export VERSION = 0 .4.0 Then just run the script: make edit-version","title":"Change version"},{"location":"dev/#working-with-documentation","text":"First you need to install requirments: poetry install -E docs","title":"Working with documentation"},{"location":"dev/#validate-docstrings-in-code","text":"make validate-docstrings","title":"Validate docstrings in code"},{"location":"dev/#generate-api-reference","text":"The environment variable VERSION is used for generation. It needs to be exported, for example: export VERSION = 0 .4.0 Generate: make docs-generate-reference","title":"Generate API Reference"},{"location":"dev/#move-current-api-reference-to-legacy","text":"make docs-move-to-legacy","title":"Move current API Reference to Legacy"},{"location":"dev/#run-the-development-server","text":"make docs-serve","title":"Run the development server"},{"location":"dev/#build-render-the-docs","text":"make docs-build","title":"Build (render) the docs"},{"location":"dev/#build-and-deploy-the-documentation-to-github-pages","text":"make docs-deploy","title":"Build and deploy the documentation to github pages"},{"location":"migrations/0_2/","text":"0.1 -> 0.2 Application Host and port to run are now passed in the Application.run method 0.1 0.2 import cubes app = cubes . Application ( '127.0.0.1' , 25565 ) app . run () import cubes app = cubes . Application () app . run ( '127.0.0.1' , 25565 ) Now packet_id is passed to the packet handlers as the first arguments 0.1 0.2 import cubes async def handler ( packet : cubes . ReadBuffer ): pass import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ): pass The value returned by the handler is now ignored. You must send all packets yourself 0.1 0.2 import cubes async def handler ( packet : cubes . ReadBuffer ) -> Optional [ cubes . WriteBuffer ]: \"\"\"Process Status Ping.\"\"\" return cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet . read ( 8 )) import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ) -> None : \"\"\"Process Status Ping.\"\"\" await packet . connection . send ( cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet_read ( 8 ) ) ReadBuffer Now the connection argument is required for initialization 0.1 0.2 import cubes ... buff = cubes . ReadBuffer () import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection buff = cubes . ReadBuffer ( conn ) The same argument appeared for the from_reader method 0.1 0.2 import asyncio import cubes ... reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( reader ) import asyncio import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( conn , reader ) Connection The \u0421onnection class has been replaced with PlayerConnection . When initializing it, you must pass an Application instance 0.1 0.2 import asyncio import cubes ... reader : asyncio . StreamReader writer : asyncio . StreamWriter conn = cubes . Connection ( reader , writer ) import asyncio import cubes import cubes.abc ... reader : asyncio . StreamReader writer : asyncio . StreamWriter app : cubes . abc . Application conn = cubes . Connection ( reader , writer , app ) An optional argument reason has been added to the close method and the \u0421loseConnection exception PlayerConnection CloseConnection import cubes ... conn : cubes . PlayerConnection reason : str await conn . close ( reason ) import cubes ... reason : str raise cubes . CloseConnection ( reason ) Removed set_current and get_current methods. Instead of get_current , use the instance from the connection property of ReadBuffer 0.1 0.2 import cubes ... async def handler ( packet : cubes . ReadBuffer ): conn = cubes . Connection . get_current () import cubes ... async def handler ( packet_id : int , packet : cubes . ReadBuffer ): conn = packet . connection","title":"0.1 -> 0.2"},{"location":"migrations/0_2/#01-02","text":"","title":"0.1 -&gt; 0.2"},{"location":"migrations/0_2/#application","text":"Host and port to run are now passed in the Application.run method 0.1 0.2 import cubes app = cubes . Application ( '127.0.0.1' , 25565 ) app . run () import cubes app = cubes . Application () app . run ( '127.0.0.1' , 25565 ) Now packet_id is passed to the packet handlers as the first arguments 0.1 0.2 import cubes async def handler ( packet : cubes . ReadBuffer ): pass import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ): pass The value returned by the handler is now ignored. You must send all packets yourself 0.1 0.2 import cubes async def handler ( packet : cubes . ReadBuffer ) -> Optional [ cubes . WriteBuffer ]: \"\"\"Process Status Ping.\"\"\" return cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet . read ( 8 )) import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ) -> None : \"\"\"Process Status Ping.\"\"\" await packet . connection . send ( cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet_read ( 8 ) )","title":"Application"},{"location":"migrations/0_2/#readbuffer","text":"Now the connection argument is required for initialization 0.1 0.2 import cubes ... buff = cubes . ReadBuffer () import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection buff = cubes . ReadBuffer ( conn ) The same argument appeared for the from_reader method 0.1 0.2 import asyncio import cubes ... reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( reader ) import asyncio import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( conn , reader )","title":"ReadBuffer"},{"location":"migrations/0_2/#connection","text":"The \u0421onnection class has been replaced with PlayerConnection . When initializing it, you must pass an Application instance 0.1 0.2 import asyncio import cubes ... reader : asyncio . StreamReader writer : asyncio . StreamWriter conn = cubes . Connection ( reader , writer ) import asyncio import cubes import cubes.abc ... reader : asyncio . StreamReader writer : asyncio . StreamWriter app : cubes . abc . Application conn = cubes . Connection ( reader , writer , app ) An optional argument reason has been added to the close method and the \u0421loseConnection exception PlayerConnection CloseConnection import cubes ... conn : cubes . PlayerConnection reason : str await conn . close ( reason ) import cubes ... reason : str raise cubes . CloseConnection ( reason ) Removed set_current and get_current methods. Instead of get_current , use the instance from the connection property of ReadBuffer 0.1 0.2 import cubes ... async def handler ( packet : cubes . ReadBuffer ): conn = cubes . Connection . get_current () import cubes ... async def handler ( packet_id : int , packet : cubes . ReadBuffer ): conn = packet . connection","title":"Connection"},{"location":"ru/","text":"pyCubes pyCubes \u2014 \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 Minecraft Java Edition. \u2757 0.x \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b, API \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: pip install pyCubes \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: import cubes app = cubes . Application () \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043d\u0438\u0437\u043a\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u044b\u0439 \u0445\u0435\u043d\u0434\u043b\u0435\u0440: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ) -> None : print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) \u041e\u0441\u0442\u0430\u0451\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435: app . run ( '127.0.0.1' , 25565 ) \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c . \u0412\u0441\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0437\u0434\u0435\u0441\u044c .","title":"pyCubes"},{"location":"ru/#pycubes","text":"pyCubes \u2014 \u044d\u0442\u043e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 Minecraft Java Edition. \u2757 0.x \u0432\u0435\u0440\u0441\u0438\u0438 \u043d\u0435 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b, API \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430: pip install pyCubes","title":"pyCubes"},{"location":"ru/#_1","text":"\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f: import cubes app = cubes . Application () \u041f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u043d\u0438\u0437\u043a\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u044b\u0439 \u0445\u0435\u043d\u0434\u043b\u0435\u0440: async def process_handshake ( packet_id : int , packet : cubes . ReadBuffer ) -> None : print ( 'Protocol version:' , packet . varint ) print ( 'Server host:' , packet . string ) print ( 'Server port:' , packet . unsigned_short ) print ( 'Next state:' , cubes . ConnectionStatus ( packet . varint )) app . add_low_level_handler ( cubes . ConnectionStatus . HANDSHAKE , 0x00 , process_handshake ) \u041e\u0441\u0442\u0430\u0451\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435: app . run ( '127.0.0.1' , 25565 ) \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0437\u0434\u0435\u0441\u044c . \u0412\u0441\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0437\u0434\u0435\u0441\u044c .","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435"},{"location":"ru/dev/","text":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 C\u043a\u0440\u0438\u043f\u0442\u044b \u0417\u0430\u043f\u0443\u0441\u043a \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f make format \u0417\u0430\u043f\u0443\u0441\u043a \u043b\u0438\u043d\u0442\u0435\u0440\u043e\u0432 make lint \u0417\u0430\u043f\u0443\u0441\u043a \u0442\u0435\u0441\u0442\u043e\u0432 make test \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0438 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f VERSION . \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: export VERSION = 0 .4.0 \u0417\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u043a\u0440\u0438\u043f\u0442: make edit-version \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439 C\u043d\u0430\u0447\u0430\u043b\u0430 \u043d\u0443\u0436\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0443\u0442\u0438\u043b\u0438\u0442\u044b: poetry install -E docs \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u043e\u043a \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0432 \u043a\u043e\u0434\u0435 make validate-docstrings \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f API Reference \u0414\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f VERSION . \u0415\u0451 \u043d\u0443\u0436\u043d\u043e \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: export VERSION = 0 .4.0 \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f: make docs-generate-reference \u041f\u0435\u0440\u0435\u043d\u043e\u0441 API Reference \u0432 \u0440\u0430\u0437\u0434\u0435\u043b Legacy make docs-move-to-legacy \u0417\u0430\u043f\u0443\u0441\u043a dev-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 make docs-serve \u0421\u0431\u043e\u0440\u043a\u0430 (\u0440\u0435\u043d\u0434\u0435\u0440) \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 make docs-build \u0421\u0431\u043e\u0440\u043a\u0430 \u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0430 github pages make docs-deploy","title":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430"},{"location":"ru/dev/#_1","text":"","title":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430"},{"location":"ru/dev/#c","text":"","title":"C\u043a\u0440\u0438\u043f\u0442\u044b"},{"location":"ru/dev/#_2","text":"make format","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f"},{"location":"ru/dev/#_3","text":"make lint","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u043b\u0438\u043d\u0442\u0435\u0440\u043e\u0432"},{"location":"ru/dev/#_4","text":"make test","title":"\u0417\u0430\u043f\u0443\u0441\u043a \u0442\u0435\u0441\u0442\u043e\u0432"},{"location":"ru/dev/#_5","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f VERSION . \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: export VERSION = 0 .4.0 \u0417\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u043a\u0440\u0438\u043f\u0442: make edit-version","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0438"},{"location":"ru/dev/#_6","text":"C\u043d\u0430\u0447\u0430\u043b\u0430 \u043d\u0443\u0436\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0443\u0442\u0438\u043b\u0438\u0442\u044b: poetry install -E docs","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439"},{"location":"ru/dev/#_7","text":"make validate-docstrings","title":"\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u043e\u043a \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0432 \u043a\u043e\u0434\u0435"},{"location":"ru/dev/#api-reference","text":"\u0414\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f VERSION . \u0415\u0451 \u043d\u0443\u0436\u043d\u043e \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: export VERSION = 0 .4.0 \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f: make docs-generate-reference","title":"\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f API Reference"},{"location":"ru/dev/#api-reference-legacy","text":"make docs-move-to-legacy","title":"\u041f\u0435\u0440\u0435\u043d\u043e\u0441 API Reference \u0432 \u0440\u0430\u0437\u0434\u0435\u043b Legacy"},{"location":"ru/dev/#dev-","text":"make docs-serve","title":"\u0417\u0430\u043f\u0443\u0441\u043a dev-\u0441\u0435\u0440\u0432\u0435\u0440\u0430"},{"location":"ru/dev/#_8","text":"make docs-build","title":"\u0421\u0431\u043e\u0440\u043a\u0430 (\u0440\u0435\u043d\u0434\u0435\u0440) \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438"},{"location":"ru/dev/#github-pages","text":"make docs-deploy","title":"\u0421\u0431\u043e\u0440\u043a\u0430 \u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0430 github pages"},{"location":"ru/migrations/0_2/","text":"0.1 -> 0.2 Application \u0425\u043e\u0441\u0442 \u0438 \u043f\u043e\u0440\u0442 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 Application.run \u0411\u044b\u043b\u043e C\u0442\u0430\u043b\u043e import cubes app = cubes . Application ( '127.0.0.1' , 25565 ) app . run () import cubes app = cubes . Application () app . run ( '127.0.0.1' , 25565 ) \u0412 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b \u043f\u0430\u043a\u0435\u0442\u043e\u0432 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0432\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442\u0441\u044f packet_id \u0411\u044b\u043b\u043e C\u0442\u0430\u043b\u043e import cubes async def handler ( packet : cubes . ReadBuffer ): pass import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ): pass \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u043e\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043f\u0435\u0440\u044c \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes async def handler ( packet : cubes . ReadBuffer ) -> Optional [ cubes . WriteBuffer ]: \"\"\"Process Status Ping.\"\"\" return cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet . read ( 8 )) import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ) -> None : \"\"\"Process Status Ping.\"\"\" await packet . connection . send ( cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet_read ( 8 ) ) ReadBuffer \u0422\u0435\u043f\u0435\u0440\u044c \u0434\u043b\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 connection \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes ... buff = cubes . ReadBuffer () import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection buff = cubes . ReadBuffer ( conn ) \u0422\u0430\u043a\u043e\u0439 \u0436\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u043e\u044f\u0432\u0438\u043b\u0441\u044f \u0438 \u0443 \u043c\u0435\u0442\u043e\u0434\u0430 from_reader \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import asyncio import cubes ... reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( reader ) import asyncio import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( conn , reader ) Connection \u041a\u043b\u0430\u0441\u0441 \u0421onnection \u0437\u0430\u043c\u0435\u043d\u0451\u043d \u043d\u0430 PlayerConnection . \u041f\u0440\u0438 \u0435\u0433\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0438\u043d\u0441\u0442\u0430\u043d\u0441 Application \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import asyncio import cubes ... reader : asyncio . StreamReader writer : asyncio . StreamWriter conn = cubes . Connection ( reader , writer ) import asyncio import cubes import cubes.abc ... reader : asyncio . StreamReader writer : asyncio . StreamWriter app : cubes . abc . Application conn = cubes . Connection ( reader , writer , app ) \u0412 \u043c\u0435\u0442\u043e\u0434 close \u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0421loseConnection \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 reason PlayerConnection CloseConnection import cubes ... conn : cubes . PlayerConnection reason : str await conn . close ( reason ) import cubes ... reason : str raise cubes . CloseConnection ( reason ) \u0423\u0434\u0430\u043b\u0435\u043d\u044b \u043c\u0435\u0442\u043e\u0434\u044b set_current \u0438 get_current . \u0412\u043c\u0435\u0441\u0442\u043e get_current \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0430\u043d\u0441 \u0438\u0437 property connection \u0443 ReadBuffer \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes ... async def handler ( packet : cubes . ReadBuffer ): conn = cubes . Connection . get_current () import cubes ... async def handler ( packet_id : int , packet : cubes . ReadBuffer ): conn = packet . connection","title":"0.1 -> 0.2"},{"location":"ru/migrations/0_2/#01-02","text":"","title":"0.1 -&gt; 0.2"},{"location":"ru/migrations/0_2/#application","text":"\u0425\u043e\u0441\u0442 \u0438 \u043f\u043e\u0440\u0442 \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u044e\u0442\u0441\u044f \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 Application.run \u0411\u044b\u043b\u043e C\u0442\u0430\u043b\u043e import cubes app = cubes . Application ( '127.0.0.1' , 25565 ) app . run () import cubes app = cubes . Application () app . run ( '127.0.0.1' , 25565 ) \u0412 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b \u043f\u0430\u043a\u0435\u0442\u043e\u0432 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u0435\u0440\u0432\u044b\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u0451\u0442\u0441\u044f packet_id \u0411\u044b\u043b\u043e C\u0442\u0430\u043b\u043e import cubes async def handler ( packet : cubes . ReadBuffer ): pass import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ): pass \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u043e\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u043e\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0442\u0435\u043f\u0435\u0440\u044c \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f. \u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes async def handler ( packet : cubes . ReadBuffer ) -> Optional [ cubes . WriteBuffer ]: \"\"\"Process Status Ping.\"\"\" return cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet . read ( 8 )) import cubes async def handler ( packet_id : int , packet : cubes . ReadBuffer ) -> None : \"\"\"Process Status Ping.\"\"\" await packet . connection . send ( cubes . WriteBuffer () . pack_varint ( 0x01 ) . write ( packet_read ( 8 ) )","title":"Application"},{"location":"ru/migrations/0_2/#readbuffer","text":"\u0422\u0435\u043f\u0435\u0440\u044c \u0434\u043b\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 connection \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes ... buff = cubes . ReadBuffer () import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection buff = cubes . ReadBuffer ( conn ) \u0422\u0430\u043a\u043e\u0439 \u0436\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043f\u043e\u044f\u0432\u0438\u043b\u0441\u044f \u0438 \u0443 \u043c\u0435\u0442\u043e\u0434\u0430 from_reader \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import asyncio import cubes ... reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( reader ) import asyncio import cubes import cubes.abc ... conn : cubes . abc . AbstractConnection reader : asyncio . StreamReader buff = await cubes . ReadBuffer . from_reader ( conn , reader )","title":"ReadBuffer"},{"location":"ru/migrations/0_2/#connection","text":"\u041a\u043b\u0430\u0441\u0441 \u0421onnection \u0437\u0430\u043c\u0435\u043d\u0451\u043d \u043d\u0430 PlayerConnection . \u041f\u0440\u0438 \u0435\u0433\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0438\u043d\u0441\u0442\u0430\u043d\u0441 Application \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import asyncio import cubes ... reader : asyncio . StreamReader writer : asyncio . StreamWriter conn = cubes . Connection ( reader , writer ) import asyncio import cubes import cubes.abc ... reader : asyncio . StreamReader writer : asyncio . StreamWriter app : cubes . abc . Application conn = cubes . Connection ( reader , writer , app ) \u0412 \u043c\u0435\u0442\u043e\u0434 close \u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0421loseConnection \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 reason PlayerConnection CloseConnection import cubes ... conn : cubes . PlayerConnection reason : str await conn . close ( reason ) import cubes ... reason : str raise cubes . CloseConnection ( reason ) \u0423\u0434\u0430\u043b\u0435\u043d\u044b \u043c\u0435\u0442\u043e\u0434\u044b set_current \u0438 get_current . \u0412\u043c\u0435\u0441\u0442\u043e get_current \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0430\u043d\u0441 \u0438\u0437 property connection \u0443 ReadBuffer \u0411\u044b\u043b\u043e \u0421\u0442\u0430\u043b\u043e import cubes ... async def handler ( packet : cubes . ReadBuffer ): conn = cubes . Connection . get_current () import cubes ... async def handler ( packet_id : int , packet : cubes . ReadBuffer ): conn = packet . connection","title":"Connection"}]}